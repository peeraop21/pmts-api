// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using PMTs.DataAccess.Models;

namespace PMTs.DataAccess;

public partial class PMTsDbContext : DbContext
{
    public PMTsDbContext(DbContextOptions<PMTsDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Additive> Additive { get; set; }

    public virtual DbSet<AllowanceHard> AllowanceHard { get; set; }

    public virtual DbSet<AllowanceProcess> AllowanceProcess { get; set; }

    public virtual DbSet<AttachFileMo> AttachFileMo { get; set; }

    public virtual DbSet<AutoPackingConfig> AutoPackingConfig { get; set; }

    public virtual DbSet<AutoPackingCustomer> AutoPackingCustomer { get; set; }

    public virtual DbSet<AutoPackingSpec> AutoPackingSpec { get; set; }

    public virtual DbSet<BoardAlternative> BoardAlternative { get; set; }

    public virtual DbSet<BoardCombindDummyCode> BoardCombindDummyCode { get; set; }

    public virtual DbSet<BoardCombine> BoardCombine { get; set; }

    public virtual DbSet<BoardCombineAcc> BoardCombineAcc { get; set; }

    public virtual DbSet<BoardSpec> BoardSpec { get; set; }

    public virtual DbSet<BoardUse> BoardUse { get; set; }

    public virtual DbSet<BomStruct> BomStruct { get; set; }

    public virtual DbSet<BuildRemark> BuildRemark { get; set; }

    public virtual DbSet<ChangeHistory> ChangeHistory { get; set; }

    public virtual DbSet<Coating> Coating { get; set; }

    public virtual DbSet<Color> Color { get; set; }

    public virtual DbSet<CompanyProfile> CompanyProfile { get; set; }

    public virtual DbSet<ConfigWordingReport> ConfigWordingReport { get; set; }

    public virtual DbSet<CorConfig> CorConfig { get; set; }

    public virtual DbSet<CustShipTo> CustShipTo { get; set; }

    public virtual DbSet<Customer> Customer { get; set; }

    public virtual DbSet<CustomerSkic> CustomerSkic { get; set; }

    public virtual DbSet<DocumentS> DocumentS { get; set; }

    public virtual DbSet<DocumentSlist> DocumentSlist { get; set; }

    public virtual DbSet<EorderingLog> EorderingLog { get; set; }

    public virtual DbSet<Flute> Flute { get; set; }

    public virtual DbSet<FluteLayer> FluteLayer { get; set; }

    public virtual DbSet<FluteTr> FluteTr { get; set; }

    public virtual DbSet<HierarchyLv2Matrix> HierarchyLv2Matrix { get; set; }

    public virtual DbSet<HierarchyLv3> HierarchyLv3 { get; set; }

    public virtual DbSet<HierarchyLv4> HierarchyLv4 { get; set; }

    public virtual DbSet<HireMapping> HireMapping { get; set; }

    public virtual DbSet<HireOrder> HireOrder { get; set; }

    public virtual DbSet<HoldMaterial> HoldMaterial { get; set; }

    public virtual DbSet<HoldMaterialHistory> HoldMaterialHistory { get; set; }

    public virtual DbSet<HoneyPaper> HoneyPaper { get; set; }

    public virtual DbSet<HvaMaster> HvaMaster { get; set; }

    public virtual DbSet<InfoRecordSourceList> InfoRecordSourceList { get; set; }

    public virtual DbSet<InterfaceSystemApi> InterfaceSystemApi { get; set; }

    public virtual DbSet<JoinCharacter> JoinCharacter { get; set; }

    public virtual DbSet<Joint> Joint { get; set; }

    public virtual DbSet<KindOfProduct> KindOfProduct { get; set; }

    public virtual DbSet<KindOfProductGroup> KindOfProductGroup { get; set; }

    public virtual DbSet<LogPrintMo> LogPrintMo { get; set; }

    public virtual DbSet<Machine> Machine { get; set; }

    public virtual DbSet<MachineFluteTrim> MachineFluteTrim { get; set; }

    public virtual DbSet<MachineGroup> MachineGroup { get; set; }

    public virtual DbSet<MainMenus> MainMenus { get; set; }

    public virtual DbSet<MapCost> MapCost { get; set; }

    public virtual DbSet<MappingPg> MappingPg { get; set; }

    public virtual DbSet<MasterData> MasterData { get; set; }

    public virtual DbSet<MasterRole> MasterRole { get; set; }

    public virtual DbSet<MasterUser> MasterUser { get; set; }

    public virtual DbSet<MaterialType> MaterialType { get; set; }

    public virtual DbSet<MenuRole> MenuRole { get; set; }

    public virtual DbSet<MoBoardAlternative> MoBoardAlternative { get; set; }

    public virtual DbSet<MoBoardUse> MoBoardUse { get; set; }

    public virtual DbSet<MoBomRawMat> MoBomRawMat { get; set; }

    public virtual DbSet<MoData> MoData { get; set; }

    public virtual DbSet<MoDatalog> MoDatalog { get; set; }

    public virtual DbSet<MoRouting> MoRouting { get; set; }

    public virtual DbSet<MoSpec> MoSpec { get; set; }

    public virtual DbSet<MoTemp> MoTemp { get; set; }

    public virtual DbSet<Pallet> Pallet { get; set; }

    public virtual DbSet<PaperGrade> PaperGrade { get; set; }

    public virtual DbSet<PaperGradeCodeMachine> PaperGradeCodeMachine { get; set; }

    public virtual DbSet<PaperWidth> PaperWidth { get; set; }

    public virtual DbSet<PlantCostField> PlantCostField { get; set; }

    public virtual DbSet<PlantView> PlantView { get; set; }

    public virtual DbSet<PmtsConfig> PmtsConfig { get; set; }

    public virtual DbSet<PpcBoiStatus> PpcBoiStatus { get; set; }

    public virtual DbSet<PpcFscCode> PpcFscCode { get; set; }

    public virtual DbSet<PpcFscFgCode> PpcFscFgCode { get; set; }

    public virtual DbSet<PpcMasterRpac> PpcMasterRpac { get; set; }

    public virtual DbSet<PpcProductionPrintingProcess> PpcProductionPrintingProcess { get; set; }

    public virtual DbSet<PpcProductionProcess> PpcProductionProcess { get; set; }

    public virtual DbSet<PpcRawMaterialMaster> PpcRawMaterialMaster { get; set; }

    public virtual DbSet<PpcRawMaterialProductionBom> PpcRawMaterialProductionBom { get; set; }

    public virtual DbSet<PpcWorkType> PpcWorkType { get; set; }

    public virtual DbSet<PresaleChangeProduct> PresaleChangeProduct { get; set; }

    public virtual DbSet<PresaleChangeRouting> PresaleChangeRouting { get; set; }

    public virtual DbSet<PricingMaster> PricingMaster { get; set; }

    public virtual DbSet<PricingMasterScale> PricingMasterScale { get; set; }

    public virtual DbSet<PrintMethod> PrintMethod { get; set; }

    public virtual DbSet<ProcessCost> ProcessCost { get; set; }

    public virtual DbSet<ProductCatalogConfig> ProductCatalogConfig { get; set; }

    public virtual DbSet<ProductGroup> ProductGroup { get; set; }

    public virtual DbSet<ProductType> ProductType { get; set; }

    public virtual DbSet<ProductionType> ProductionType { get; set; }

    public virtual DbSet<QaAlert> QaAlert { get; set; }

    public virtual DbSet<QaAlertTemp> QaAlertTemp { get; set; }

    public virtual DbSet<QaItems> QaItems { get; set; }

    public virtual DbSet<QualitySpec> QualitySpec { get; set; }

    public virtual DbSet<Remark> Remark { get; set; }

    public virtual DbSet<Routing> Routing { get; set; }

    public virtual DbSet<Routing2pc> Routing2pc { get; set; }

    public virtual DbSet<RunningNo> RunningNo { get; set; }

    public virtual DbSet<SalesView> SalesView { get; set; }

    public virtual DbSet<SbRouting> SbRouting { get; set; }

    public virtual DbSet<ScoreGap> ScoreGap { get; set; }

    public virtual DbSet<ScoreType> ScoreType { get; set; }

    public virtual DbSet<SendEmail> SendEmail { get; set; }

    public virtual DbSet<SetCategoriesOldMat> SetCategoriesOldMat { get; set; }

    public virtual DbSet<StandardPatternName> StandardPatternName { get; set; }

    public virtual DbSet<SubMenurole> SubMenurole { get; set; }

    public virtual DbSet<SubMenus> SubMenus { get; set; }

    public virtual DbSet<TagPrintSo> TagPrintSo { get; set; }

    public virtual DbSet<TransactionsDetail> TransactionsDetail { get; set; }

    public virtual DbSet<TruckOptimize> TruckOptimize { get; set; }

    public virtual DbSet<UnitMaterial> UnitMaterial { get; set; }

    public virtual DbSet<UpdateDuedateAndOrderQtyByDwtoMoData> UpdateDuedateAndOrderQtyByDwtoMoData { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Thai_CI_AS");

        modelBuilder.Entity<Additive>(entity =>
        {
            entity.Property(e => e.Code).HasMaxLength(10);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.Remark).HasMaxLength(100);
            entity.Property(e => e.Type).HasMaxLength(20);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<AllowanceHard>(entity =>
        {
            entity.ToTable("Allowance_Hard");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.GroupKiwi)
                .HasDefaultValue(5)
                .HasColumnName("Group_Kiwi");
            entity.Property(e => e.Percen).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.SheetMax).HasColumnName("Sheet_Max");
            entity.Property(e => e.SheetMin).HasColumnName("Sheet_Min");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<AllowanceProcess>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Allowance_Process_1");

            entity.ToTable("Allowance_Process");

            entity.HasIndex(e => e.Machine, "NonClusteredIndex-Machine-Allowance_Process");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Machine)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.SheetMax).HasColumnName("Sheet_Max");
            entity.Property(e => e.SheetMin).HasColumnName("Sheet_Min");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<AttachFileMo>(entity =>
        {
            entity.ToTable("AttachFileMO");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.OrderItem)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.PathInit)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.PathNew)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<AutoPackingConfig>(entity =>
        {
            entity.Property(e => e.Code).HasMaxLength(5);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Subject).HasMaxLength(50);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.Value).HasMaxLength(50);
        });

        modelBuilder.Entity<AutoPackingCustomer>(entity =>
        {
            entity.HasKey(e => e.CusId);

            entity.Property(e => e.CusId)
                .HasMaxLength(50)
                .HasColumnName("CusID");
            entity.Property(e => e.CPalletArrange)
                .HasMaxLength(3)
                .HasColumnName("cPalletArrange");
            entity.Property(e => e.CPalletStackPos)
                .HasMaxLength(3)
                .HasColumnName("cPalletStackPos");
            entity.Property(e => e.CStrapType)
                .HasMaxLength(3)
                .HasColumnName("cStrapType");
            entity.Property(e => e.CStrapperBottomProtection)
                .HasMaxLength(3)
                .HasColumnName("cStrapperBottomProtection");
            entity.Property(e => e.CStrapperTopProtection)
                .HasMaxLength(3)
                .HasColumnName("cStrapperTopProtection");
            entity.Property(e => e.CornerGuard)
                .HasMaxLength(3)
                .HasColumnName("cornerGuard");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CusName).HasMaxLength(200);
            entity.Property(e => e.NBottomBoardType)
                .HasMaxLength(3)
                .HasColumnName("nBottomBoardType");
            entity.Property(e => e.NPalletType)
                .HasMaxLength(3)
                .HasColumnName("nPalletType");
            entity.Property(e => e.NStrapCompression)
                .HasMaxLength(3)
                .HasColumnName("nStrapCompression");
            entity.Property(e => e.NTopBoardType)
                .HasMaxLength(3)
                .HasColumnName("nTopBoardType");
            entity.Property(e => e.NWrapType)
                .HasMaxLength(3)
                .HasColumnName("nWrapType");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<AutoPackingSpec>(entity =>
        {
            entity.Property(e => e.CPalletArrange)
                .HasMaxLength(3)
                .HasColumnName("cPalletArrange");
            entity.Property(e => e.CPalletStackPos)
                .HasMaxLength(3)
                .HasColumnName("cPalletStackPos");
            entity.Property(e => e.CStrapType)
                .HasMaxLength(3)
                .HasColumnName("cStrapType");
            entity.Property(e => e.CStrapperBottomProtection)
                .HasMaxLength(3)
                .HasColumnName("cStrapperBottomProtection");
            entity.Property(e => e.CStrapperTopProtection)
                .HasMaxLength(3)
                .HasColumnName("cStrapperTopProtection");
            entity.Property(e => e.CornerGuard)
                .HasMaxLength(3)
                .HasColumnName("cornerGuard");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.MaterialNo)
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.NBottomBoardType)
                .HasMaxLength(3)
                .HasColumnName("nBottomBoardType");
            entity.Property(e => e.NPalletType)
                .HasMaxLength(3)
                .HasColumnName("nPalletType");
            entity.Property(e => e.NStrapCompression)
                .HasMaxLength(3)
                .HasColumnName("nStrapCompression");
            entity.Property(e => e.NTopBoardType)
                .HasMaxLength(3)
                .HasColumnName("nTopBoardType");
            entity.Property(e => e.NWrapType)
                .HasMaxLength(3)
                .HasColumnName("nWrapType");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<BoardAlternative>(entity =>
        {
            entity.ToTable("Board_Alternative");

            entity.Property(e => e.BoardName)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("Board_Name");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Flute).HasMaxLength(20);
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(13)
                .HasColumnName("Material_No");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<BoardCombindDummyCode>(entity =>
        {
            entity.ToTable("Board_Combind_DummyCode");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.DummyCode)
                .HasMaxLength(4)
                .HasColumnName("Dummy_Code");
        });

        modelBuilder.Entity<BoardCombine>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_Board")
                .IsClustered(false);

            entity.ToTable("Board_Combine");

            entity.HasIndex(e => e.Code, "NonClusteredIndex-Code-BoardCombine");

            entity.Property(e => e.Board)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.BoardCombine1)
                .HasMaxLength(200)
                .HasColumnName("Board_Combine");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(4);
            entity.Property(e => e.CorrControl).HasMaxLength(50);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Ectstrength).HasColumnName("ECTStrength");
            entity.Property(e => e.Fctstrength).HasColumnName("FCTStrength");
            entity.Property(e => e.Flute)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.GroupPaperWidth).HasDefaultValue(2);
            entity.Property(e => e.Kiwi)
                .HasMaxLength(50)
                .HasColumnName("KIWI");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<BoardCombineAcc>(entity =>
        {
            entity.ToTable("Board_Combine_Acc");

            entity.HasIndex(e => e.Code, "NonClusteredIndex-Code-BoardCombineAcc");

            entity.Property(e => e.C1arta35).HasColumnName("C1ARTA35");
            entity.Property(e => e.C1copb00).HasColumnName("C1COPB00");
            entity.Property(e => e.C1copbc0).HasColumnName("C1COPBC0");
            entity.Property(e => e.C1copc00).HasColumnName("C1COPC00");
            entity.Property(e => e.C1cope00).HasColumnName("C1COPE00");
            entity.Property(e => e.C1dupd30).HasColumnName("C1DUPD30");
            entity.Property(e => e.C1dupd40).HasColumnName("C1DUPD40");
            entity.Property(e => e.C1hnch20).HasColumnName("C1HNCH20");
            entity.Property(e => e.C1ppbp03).HasColumnName("C1PPBP03");
            entity.Property(e => e.C1ppbp05).HasColumnName("C1PPBP05");
            entity.Property(e => e.C1stks00).HasColumnName("C1STKS00");
            entity.Property(e => e.C1stks01).HasColumnName("C1STKS01");
            entity.Property(e => e.C2copb00).HasColumnName("C2COPB00");
            entity.Property(e => e.C2copbc0).HasColumnName("C2COPBC0");
            entity.Property(e => e.C2copc00).HasColumnName("C2COPC00");
            entity.Property(e => e.C2cope00).HasColumnName("C2COPE00");
            entity.Property(e => e.C2hnch20).HasColumnName("C2HNCH20");
            entity.Property(e => e.C2stks00).HasColumnName("C2STKS00");
            entity.Property(e => e.C3copb00).HasColumnName("C3COPB00");
            entity.Property(e => e.C3copbc0).HasColumnName("C3COPBC0");
            entity.Property(e => e.C3copc00).HasColumnName("C3COPC00");
            entity.Property(e => e.C3cope00).HasColumnName("C3COPE00");
            entity.Property(e => e.C3hnch10).HasColumnName("C3HNCH10");
            entity.Property(e => e.C3hnch15).HasColumnName("C3HNCH15");
            entity.Property(e => e.C3hnch20).HasColumnName("C3HNCH20");
            entity.Property(e => e.C3stks00).HasColumnName("C3STKS00");
            entity.Property(e => e.Ca).HasColumnName("CA");
            entity.Property(e => e.Cb).HasColumnName("CB");
            entity.Property(e => e.Cc).HasColumnName("CC");
            entity.Property(e => e.Cf).HasColumnName("CF");
            entity.Property(e => e.Cg).HasColumnName("CG");
            entity.Property(e => e.Cl).HasColumnName("CL");
            entity.Property(e => e.Code).HasMaxLength(10);
            entity.Property(e => e.Cp).HasColumnName("CP");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Cs).HasColumnName("CS");
            entity.Property(e => e.Ct).HasColumnName("CT");
            entity.Property(e => e.Cw).HasColumnName("CW");
            entity.Property(e => e.D0arta35).HasColumnName("D0ARTA35");
            entity.Property(e => e.D0copb00).HasColumnName("D0COPB00");
            entity.Property(e => e.D0copbc0).HasColumnName("D0COPBC0");
            entity.Property(e => e.D0copc00).HasColumnName("D0COPC00");
            entity.Property(e => e.D0cope00).HasColumnName("D0COPE00");
            entity.Property(e => e.D0dupd30).HasColumnName("D0DUPD30");
            entity.Property(e => e.D0hnch20).HasColumnName("D0HNCH20");
            entity.Property(e => e.D0stks00).HasColumnName("D0STKS00");
            entity.Property(e => e.D1arta35).HasColumnName("D1ARTA35");
            entity.Property(e => e.D1copb00).HasColumnName("D1COPB00");
            entity.Property(e => e.D1copbc0).HasColumnName("D1COPBC0");
            entity.Property(e => e.D1copc00).HasColumnName("D1COPC00");
            entity.Property(e => e.D1cope00).HasColumnName("D1COPE00");
            entity.Property(e => e.D1dupd30).HasColumnName("D1DUPD30");
            entity.Property(e => e.D1dupd40).HasColumnName("D1DUPD40");
            entity.Property(e => e.D1hnch20).HasColumnName("D1HNCH20");
            entity.Property(e => e.D1ppbp05).HasColumnName("D1PPBP05");
            entity.Property(e => e.D1stks00).HasColumnName("D1STKS00");
            entity.Property(e => e.D1stks01).HasColumnName("D1STKS01");
            entity.Property(e => e.D2copb00).HasColumnName("D2COPB00");
            entity.Property(e => e.D2copbc0).HasColumnName("D2COPBC0");
            entity.Property(e => e.D2hnch20).HasColumnName("D2HNCH20");
            entity.Property(e => e.D3copb00).HasColumnName("D3COPB00");
            entity.Property(e => e.D3copbc0).HasColumnName("D3COPBC0");
            entity.Property(e => e.D3hnch10).HasColumnName("D3HNCH10");
            entity.Property(e => e.D3hnch15).HasColumnName("D3HNCH15");
            entity.Property(e => e.D3hnch20).HasColumnName("D3HNCH20");
            entity.Property(e => e.D3ptww05).HasColumnName("D3PTWW05");
            entity.Property(e => e.D4arta35).HasColumnName("D4ARTA35");
            entity.Property(e => e.D4copb00).HasColumnName("D4COPB00");
            entity.Property(e => e.D4copbc0).HasColumnName("D4COPBC0");
            entity.Property(e => e.D4cope00).HasColumnName("D4COPE00");
            entity.Property(e => e.D4dupd30).HasColumnName("D4DUPD30");
            entity.Property(e => e.D4dupd40).HasColumnName("D4DUPD40");
            entity.Property(e => e.D4ppbp05).HasColumnName("D4PPBP05");
            entity.Property(e => e.D5copb00).HasColumnName("D5COPB00");
            entity.Property(e => e.D5copbc0).HasColumnName("D5COPBC0");
            entity.Property(e => e.D6copb00).HasColumnName("D6COPB00");
            entity.Property(e => e.D6copbc0).HasColumnName("D6COPBC0");
            entity.Property(e => e.D6hnch20).HasColumnName("D6HNCH20");
            entity.Property(e => e.D6ptww05).HasColumnName("D6PTWW05");
            entity.Property(e => e.D7arta35).HasColumnName("D7ARTA35");
            entity.Property(e => e.D7copb00).HasColumnName("D7COPB00");
            entity.Property(e => e.D7copbc0).HasColumnName("D7COPBC0");
            entity.Property(e => e.D7cope00).HasColumnName("D7COPE00");
            entity.Property(e => e.D7dupd30).HasColumnName("D7DUPD30");
            entity.Property(e => e.D7dupd40).HasColumnName("D7DUPD40");
            entity.Property(e => e.D8copb00).HasColumnName("D8COPB00");
            entity.Property(e => e.D8copbc0).HasColumnName("D8COPBC0");
            entity.Property(e => e.D9copb00).HasColumnName("D9COPB00");
            entity.Property(e => e.D9copbc0).HasColumnName("D9COPBC0");
            entity.Property(e => e.Dbnondlp).HasColumnName("DBNONDLP");
            entity.Property(e => e.Dbnondpa).HasColumnName("DBNONDPA");
            entity.Property(e => e.Dbnondps).HasColumnName("DBNONDPS");
            entity.Property(e => e.Dbnondsa).HasColumnName("DBNONDSA");
            entity.Property(e => e.Dbstddlp).HasColumnName("DBSTDDLP");
            entity.Property(e => e.Dbstddpa).HasColumnName("DBSTDDPA");
            entity.Property(e => e.Dbstddps).HasColumnName("DBSTDDPS");
            entity.Property(e => e.Dbstddsa).HasColumnName("DBSTDDSA");
            entity.Property(e => e.Dcgcw).HasColumnName("DCGCW");
            entity.Property(e => e.Ddm14dlp).HasColumnName("DDM14DLP");
            entity.Property(e => e.Ddm14dpa).HasColumnName("DDM14DPA");
            entity.Property(e => e.Ddm14dps).HasColumnName("DDM14DPS");
            entity.Property(e => e.Ddm14dsa).HasColumnName("DDM14DSA");
            entity.Property(e => e.Ddm23dlp).HasColumnName("DDM23DLP");
            entity.Property(e => e.Ddm23dpa).HasColumnName("DDM23DPA");
            entity.Property(e => e.Ddm23dps).HasColumnName("DDM23DPS");
            entity.Property(e => e.Ddm23dsa).HasColumnName("DDM23DSA");
            entity.Property(e => e.Ddm40dlp).HasColumnName("DDM40DLP");
            entity.Property(e => e.Ddm40dpa).HasColumnName("DDM40DPA");
            entity.Property(e => e.Ddm40dps).HasColumnName("DDM40DPS");
            entity.Property(e => e.Ddm40dsa).HasColumnName("DDM40DSA");
            entity.Property(e => e.Ddmlwdlp).HasColumnName("DDMLWDLP");
            entity.Property(e => e.Ddmlwdpa).HasColumnName("DDMLWDPA");
            entity.Property(e => e.Ddmlwdps).HasColumnName("DDMLWDPS");
            entity.Property(e => e.Ddmlwdsa).HasColumnName("DDMLWDSA");
            entity.Property(e => e.Dfgcw).HasColumnName("DFGCW");
            entity.Property(e => e.DiecutPaint).HasColumnName("Diecut_Paint");
            entity.Property(e => e.Drnondlp).HasColumnName("DRNONDLP");
            entity.Property(e => e.Drnondpa).HasColumnName("DRNONDPA");
            entity.Property(e => e.Drnondps).HasColumnName("DRNONDPS");
            entity.Property(e => e.Drnondsa).HasColumnName("DRNONDSA");
            entity.Property(e => e.Drstddlp).HasColumnName("DRSTDDLP");
            entity.Property(e => e.Drstddpa).HasColumnName("DRSTDDPA");
            entity.Property(e => e.Drstddps).HasColumnName("DRSTDDPS");
            entity.Property(e => e.Drstddsa).HasColumnName("DRSTDDSA");
            entity.Property(e => e.Dsm40dps).HasColumnName("DSM40DPS");
            entity.Property(e => e.F1copb02).HasColumnName("F1COPB02");
            entity.Property(e => e.F1copc02).HasColumnName("F1COPC02");
            entity.Property(e => e.F1cope02).HasColumnName("F1COPE02");
            entity.Property(e => e.F2copbc2).HasColumnName("F2COPBC2");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Fc).HasColumnName("FC");
            entity.Property(e => e.Fcf00).HasColumnName("FCF00");
            entity.Property(e => e.Fcf01).HasColumnName("FCF01");
            entity.Property(e => e.Fcf02).HasColumnName("FCF02");
            entity.Property(e => e.Fcf04).HasColumnName("FCF04");
            entity.Property(e => e.Fcf10).HasColumnName("FCF10");
            entity.Property(e => e.Fcf30).HasColumnName("FCF30");
            entity.Property(e => e.H5h20).HasColumnName("H5H20");
            entity.Property(e => e.H5h35).HasColumnName("H5H35");
            entity.Property(e => e.H5h50).HasColumnName("H5H50");
            entity.Property(e => e.Ho).HasColumnName("HO");
            entity.Property(e => e.Ht).HasColumnName("HT");
            entity.Property(e => e.JumboGcw).HasColumnName("JumboGCW");
            entity.Property(e => e.Kr).HasColumnName("KR");
            entity.Property(e => e.Krr00).HasColumnName("KRR00");
            entity.Property(e => e.Krr01).HasColumnName("KRR01");
            entity.Property(e => e.Krr02).HasColumnName("KRR02");
            entity.Property(e => e.Krr04).HasColumnName("KRR04");
            entity.Property(e => e.Krr10).HasColumnName("KRR10");
            entity.Property(e => e.Krr30).HasColumnName("KRR30");
            entity.Property(e => e.Ks).HasColumnName("KS");
            entity.Property(e => e.Kss00).HasColumnName("KSS00");
            entity.Property(e => e.Kss01).HasColumnName("KSS01");
            entity.Property(e => e.Kss02).HasColumnName("KSS02");
            entity.Property(e => e.Kss04).HasColumnName("KSS04");
            entity.Property(e => e.Kss10).HasColumnName("KSS10");
            entity.Property(e => e.Kss30).HasColumnName("KSS30");
            entity.Property(e => e.Lc).HasColumnName("LC");
            entity.Property(e => e.Lm).HasColumnName("LM");
            entity.Property(e => e.Mam14).HasColumnName("MAM14");
            entity.Property(e => e.Mam23).HasColumnName("MAM23");
            entity.Property(e => e.Mam40).HasColumnName("MAM40");
            entity.Property(e => e.Mamlw).HasColumnName("MAMLW");
            entity.Property(e => e.Mbm14).HasColumnName("MBM14");
            entity.Property(e => e.Mbm23).HasColumnName("MBM23");
            entity.Property(e => e.Mbm40).HasColumnName("MBM40");
            entity.Property(e => e.Mbmlw).HasColumnName("MBMLW");
            entity.Property(e => e.Mcm14dlp).HasColumnName("MCM14DLP");
            entity.Property(e => e.Mcm14dpa).HasColumnName("MCM14DPA");
            entity.Property(e => e.Mcm14dps).HasColumnName("MCM14DPS");
            entity.Property(e => e.Mcm14dsa).HasColumnName("MCM14DSA");
            entity.Property(e => e.Mcm23dlp).HasColumnName("MCM23DLP");
            entity.Property(e => e.Mcm23dpa).HasColumnName("MCM23DPA");
            entity.Property(e => e.Mcm23dps).HasColumnName("MCM23DPS");
            entity.Property(e => e.Mcm23dsa).HasColumnName("MCM23DSA");
            entity.Property(e => e.Mcm40dlp).HasColumnName("MCM40DLP");
            entity.Property(e => e.Mcm40dpa).HasColumnName("MCM40DPA");
            entity.Property(e => e.Mcm40dps).HasColumnName("MCM40DPS");
            entity.Property(e => e.Mcm40dsa).HasColumnName("MCM40DSA");
            entity.Property(e => e.Mcmlwdlp).HasColumnName("MCMLWDLP");
            entity.Property(e => e.Mcmlwdpa).HasColumnName("MCMLWDPA");
            entity.Property(e => e.Mcmlwdps).HasColumnName("MCMLWDPS");
            entity.Property(e => e.Mcmlwdsa).HasColumnName("MCMLWDSA");
            entity.Property(e => e.Md).HasColumnName("MD");
            entity.Property(e => e.Mf).HasColumnName("MF");
            entity.Property(e => e.Mh).HasColumnName("MH");
            entity.Property(e => e.Mm).HasColumnName("MM");
            entity.Property(e => e.Mnm14).HasColumnName("MNM14");
            entity.Property(e => e.Mnm23).HasColumnName("MNM23");
            entity.Property(e => e.Mnm40).HasColumnName("MNM40");
            entity.Property(e => e.Mnmlw).HasColumnName("MNMLW");
            entity.Property(e => e.Mom14).HasColumnName("MOM14");
            entity.Property(e => e.Mom23).HasColumnName("MOM23");
            entity.Property(e => e.Mom28).HasColumnName("MOM28");
            entity.Property(e => e.Mom40).HasColumnName("MOM40");
            entity.Property(e => e.Momlw).HasColumnName("MOMLW");
            entity.Property(e => e.Mp).HasColumnName("MP");
            entity.Property(e => e.Mr).HasColumnName("MR");
            entity.Property(e => e.Ms).HasColumnName("MS");
            entity.Property(e => e.Mt).HasColumnName("MT");
            entity.Property(e => e.Ol).HasColumnName("OL");
            entity.Property(e => e.Olo00).HasColumnName("OLO00");
            entity.Property(e => e.Olo01).HasColumnName("OLO01");
            entity.Property(e => e.Olo02).HasColumnName("OLO02");
            entity.Property(e => e.Olo04).HasColumnName("OLO04");
            entity.Property(e => e.Olo10).HasColumnName("OLO10");
            entity.Property(e => e.Olo30).HasColumnName("OLO30");
            entity.Property(e => e.Pa).HasColumnName("PA");
            entity.Property(e => e.PaperPallet).HasColumnName("Paper_Pallet");
            entity.Property(e => e.PartitionGcw).HasColumnName("PartitionGCW");
            entity.Property(e => e.Pb).HasColumnName("PB");
            entity.Property(e => e.Pbgcw).HasColumnName("PBGCW");
            entity.Property(e => e.Pc).HasColumnName("PC");
            entity.Property(e => e.Pd).HasColumnName("PD");
            entity.Property(e => e.Pdgcw).HasColumnName("PDGCW");
            entity.Property(e => e.Ph).HasColumnName("PH");
            entity.Property(e => e.Ps).HasColumnName("PS");
            entity.Property(e => e.Psgcw).HasColumnName("PSGCW");
            entity.Property(e => e.Pt).HasColumnName("PT");
            entity.Property(e => e.Rc).HasColumnName("RC");
            entity.Property(e => e.Rdgcw).HasColumnName("RDGCW");
            entity.Property(e => e.Rh).HasColumnName("RH");
            entity.Property(e => e.Rp).HasColumnName("RP");
            entity.Property(e => e.Rs).HasColumnName("RS");
            entity.Property(e => e.Rsc).HasColumnName("RSC");
            entity.Property(e => e.Rscgcw).HasColumnName("RSCGCW");
            entity.Property(e => e.Rw).HasColumnName("RW");
            entity.Property(e => e.Sb).HasColumnName("SB");
            entity.Property(e => e.Sbgcw).HasColumnName("SBGCW");
            entity.Property(e => e.Sf).HasColumnName("SF");
            entity.Property(e => e.T1t00).HasColumnName("T1T00");
            entity.Property(e => e.T1t01).HasColumnName("T1T01");
            entity.Property(e => e.T1t02).HasColumnName("T1T02");
            entity.Property(e => e.T1t04).HasColumnName("T1T04");
            entity.Property(e => e.T1t10).HasColumnName("T1T10");
            entity.Property(e => e.T1t30).HasColumnName("T1T30");
            entity.Property(e => e.T2t00).HasColumnName("T2T00");
            entity.Property(e => e.T2t01).HasColumnName("T2T01");
            entity.Property(e => e.T2t02).HasColumnName("T2T02");
            entity.Property(e => e.T2t04).HasColumnName("T2T04");
            entity.Property(e => e.T2t10).HasColumnName("T2T10");
            entity.Property(e => e.T2t30).HasColumnName("T2T30");
            entity.Property(e => e.Tb).HasColumnName("TB");
            entity.Property(e => e.To001).HasColumnName("TO001");
            entity.Property(e => e.To002).HasColumnName("TO002");
            entity.Property(e => e.To003).HasColumnName("TO003");
            entity.Property(e => e.To004).HasColumnName("TO004");
            entity.Property(e => e.To005).HasColumnName("TO005");
            entity.Property(e => e.To006).HasColumnName("TO006");
            entity.Property(e => e.To007).HasColumnName("TO007");
            entity.Property(e => e.To008).HasColumnName("TO008");
            entity.Property(e => e.To009).HasColumnName("TO009");
            entity.Property(e => e.To010).HasColumnName("TO010");
            entity.Property(e => e.To011).HasColumnName("TO011");
            entity.Property(e => e.To012).HasColumnName("TO012");
            entity.Property(e => e.To013).HasColumnName("TO013");
            entity.Property(e => e.To014).HasColumnName("TO014");
            entity.Property(e => e.To015).HasColumnName("TO015");
            entity.Property(e => e.To018).HasColumnName("TO018");
            entity.Property(e => e.To019).HasColumnName("TO019");
            entity.Property(e => e.To020).HasColumnName("TO020");
            entity.Property(e => e.To021).HasColumnName("TO021");
            entity.Property(e => e.Tp).HasColumnName("TP");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.Wc).HasColumnName("WC");
            entity.Property(e => e.Wm).HasColumnName("WM");
            entity.Property(e => e.Ws).HasColumnName("WS");
            entity.Property(e => e.Wz).HasColumnName("WZ");
        });

        modelBuilder.Entity<BoardSpec>(entity =>
        {
            entity.Property(e => e.Code).HasMaxLength(4);
            entity.Property(e => e.Grade).HasMaxLength(10);
            entity.Property(e => e.Station).HasMaxLength(10);
        });

        modelBuilder.Entity<BoardUse>(entity =>
        {
            entity.ToTable("Board_Use");

            entity.HasIndex(e => e.MaterialNo, "NonClusteredIndex-MatNo-BoardUse");

            entity.Property(e => e.Bl)
                .HasMaxLength(10)
                .HasColumnName("BL");
            entity.Property(e => e.Bm)
                .HasMaxLength(10)
                .HasColumnName("BM");
            entity.Property(e => e.BoardId)
                .HasMaxLength(4)
                .HasColumnName("Board_Id");
            entity.Property(e => e.BoardName)
                .HasMaxLength(50)
                .HasColumnName("Board_Name");
            entity.Property(e => e.Cl)
                .HasMaxLength(10)
                .HasColumnName("CL");
            entity.Property(e => e.Cm)
                .HasMaxLength(10)
                .HasColumnName("CM");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Dl)
                .HasMaxLength(10)
                .HasColumnName("DL");
            entity.Property(e => e.Dm)
                .HasMaxLength(10)
                .HasColumnName("DM");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Flute).HasMaxLength(10);
            entity.Property(e => e.Gl)
                .HasMaxLength(10)
                .HasColumnName("GL");
            entity.Property(e => e.Kiwi)
                .HasMaxLength(50)
                .HasColumnName("KIWI");
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(13)
                .HasColumnName("Material_No");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<BomStruct>(entity =>
        {
            entity.ToTable("Bom_Struct");

            entity.HasIndex(e => new { e.FactoryCode, e.MaterialNo }, "_dta_index_Bom_Struct_5_1170819233__K2_K3_1_4_5_6_7_8_9_10_11_12_13");

            entity.Property(e => e.BomUsage)
                .HasMaxLength(1)
                .HasColumnName("Bom_Usage");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Follower)
                .IsRequired()
                .HasMaxLength(18);
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.PdisStatus)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("C")
                .HasColumnName("PDIS_Status");
            entity.Property(e => e.Plant)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.PreviousBom).HasColumnName("Previous_Bom");
            entity.Property(e => e.SapStatus).HasColumnName("SAP_Status");
            entity.Property(e => e.TranStatus).HasColumnName("Tran_Status");
            entity.Property(e => e.Unit).HasMaxLength(50);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.WeighBom)
                .HasDefaultValue(0.0)
                .HasColumnName("Weigh_Bom");
        });

        modelBuilder.Entity<BuildRemark>(entity =>
        {
            entity.ToTable("Build_Remark");

            entity.HasIndex(e => e.FactoryCode, "_dta_index_Build_Remark_5_1069246864__K3_1_4_5");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.List).HasMaxLength(50);
            entity.Property(e => e.Machine).HasMaxLength(50);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<ChangeHistory>(entity =>
        {
            entity.Property(e => e.ChangeHistoryText).HasMaxLength(100);
            entity.Property(e => e.ChangeInfo).HasMaxLength(100);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.MaterialNo)
                .HasMaxLength(50)
                .HasColumnName("Material_No");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<Coating>(entity =>
        {
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.MaterialNo)
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.Slide).HasMaxLength(10);
            entity.Property(e => e.Station).HasMaxLength(10);
            entity.Property(e => e.Type).HasMaxLength(50);
        });

        modelBuilder.Entity<Color>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Color_1");

            entity.HasIndex(e => new { e.FactoryCode, e.Ink, e.Shade }, "Color_Unique").IsUnique();

            entity.HasIndex(e => e.FactoryCode, "_dta_index_Color_5_130815528__K3_1_4_5_6_7");

            entity.HasIndex(e => new { e.Ink, e.FactoryCode }, "_dta_index_Color_5_130815528__K4_K3_1_5_6_7");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Darkness).HasDefaultValue(1);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Ink)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.MainDensity).HasMaxLength(5);
            entity.Property(e => e.Shade)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<CompanyProfile>(entity =>
        {
            entity.Property(e => e.BusinessGroup).HasMaxLength(50);
            entity.Property(e => e.Code).HasMaxLength(50);
            entity.Property(e => e.CompanyName).HasMaxLength(100);
            entity.Property(e => e.CorMaxCut)
                .HasDefaultValue(0)
                .HasColumnName("Cor_MaxCut");
            entity.Property(e => e.CustomerGroup).HasMaxLength(5);
            entity.Property(e => e.Language).HasMaxLength(10);
            entity.Property(e => e.Lat).HasMaxLength(100);
            entity.Property(e => e.Long).HasMaxLength(100);
            entity.Property(e => e.Piece2).HasDefaultValue(0);
            entity.Property(e => e.PlaningPass).HasMaxLength(100);
            entity.Property(e => e.PlaningServer).HasMaxLength(50);
            entity.Property(e => e.PlaningUser).HasMaxLength(50);
            entity.Property(e => e.PlanningProgram).HasMaxLength(50);
            entity.Property(e => e.Plant).HasMaxLength(50);
            entity.Property(e => e.PurchasGrp)
                .HasMaxLength(50)
                .HasColumnName("Purchas_Grp");
            entity.Property(e => e.SaleOrg)
                .HasMaxLength(50)
                .HasColumnName("Sale_Org");
            entity.Property(e => e.ShortName).HasMaxLength(20);
            entity.Property(e => e.StatusPmts).HasColumnName("StatusPMTs");
            entity.Property(e => e.UserApp).HasMaxLength(50);
        });

        modelBuilder.Entity<ConfigWordingReport>(entity =>
        {
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Wording).HasMaxLength(100);
        });

        modelBuilder.Entity<CorConfig>(entity =>
        {
            entity.ToTable("Cor_Config");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CutOff).HasColumnName("Cut_off");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.MaxOut).HasColumnName("Max_Out");
            entity.Property(e => e.MinOut).HasColumnName("Min_Out");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.TearTape).HasColumnName("Tear_Tape");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<CustShipTo>(entity =>
        {
            entity.ToTable("Cust_Ship_to");

            entity.Property(e => e.CustCode)
                .HasMaxLength(50)
                .HasColumnName("Cust_Code");
            entity.Property(e => e.CustPostWait)
                .HasColumnType("datetime")
                .HasColumnName("Cust_post_wait");
            entity.Property(e => e.CustPreWait)
                .HasColumnType("datetime")
                .HasColumnName("Cust_pre_wait");
            entity.Property(e => e.CustRecvTime)
                .HasMaxLength(10)
                .HasColumnName("Cust_recv_time");
            entity.Property(e => e.DeliveryDistance).HasColumnName("Delivery_distance");
            entity.Property(e => e.DeliveryTime)
                .HasColumnType("datetime")
                .HasColumnName("Delivery_time");
            entity.Property(e => e.ShipTo)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("Ship_to");
            entity.Property(e => e.TransportZone)
                .HasMaxLength(10)
                .HasColumnName("Transport_zone");
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.Property(e => e.Accgroup).HasMaxLength(10);
            entity.Property(e => e.Coa).HasColumnName("COA");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CusId)
                .HasMaxLength(50)
                .HasColumnName("Cus_ID");
            entity.Property(e => e.Cust).HasMaxLength(100);
            entity.Property(e => e.CustAlert)
                .HasMaxLength(255)
                .HasColumnName("Cust_Alert");
            entity.Property(e => e.CustClass)
                .HasMaxLength(10)
                .HasColumnName("Cust_Class");
            entity.Property(e => e.CustCode)
                .HasMaxLength(10)
                .HasColumnName("Cust_Code");
            entity.Property(e => e.CustName)
                .HasMaxLength(200)
                .HasColumnName("Cust_Name");
            entity.Property(e => e.CustReq)
                .HasMaxLength(255)
                .HasColumnName("Cust_Req");
            entity.Property(e => e.CustStatus)
                .HasDefaultValue(true)
                .HasColumnName("Cust_Status");
            entity.Property(e => e.CustomerGroup).HasMaxLength(5);
            entity.Property(e => e.DataFrom).HasMaxLength(20);
            entity.Property(e => e.District).HasMaxLength(60);
            entity.Property(e => e.FlagRouting).HasMaxLength(50);
            entity.Property(e => e.FootTagBundle).HasMaxLength(500);
            entity.Property(e => e.FootTagPallet).HasMaxLength(500);
            entity.Property(e => e.Freetext1TagBundle).HasMaxLength(500);
            entity.Property(e => e.Freetext1TagPallet).HasMaxLength(500);
            entity.Property(e => e.Freetext2TagBundle).HasMaxLength(500);
            entity.Property(e => e.Freetext2TagPallet).HasMaxLength(500);
            entity.Property(e => e.Freetext3TagBundle).HasMaxLength(500);
            entity.Property(e => e.Freetext3TagPallet).HasMaxLength(500);
            entity.Property(e => e.HeadTagBundle).HasMaxLength(500);
            entity.Property(e => e.HeadTagPallet).HasMaxLength(500);
            entity.Property(e => e.IndGrp)
                .HasMaxLength(3)
                .HasColumnName("Ind_Grp");
            entity.Property(e => e.NoTagBundle).HasMaxLength(50);
            entity.Property(e => e.PalletOverhang).HasColumnName("Pallet_Overhang");
            entity.Property(e => e.PriorityFlag).HasColumnName("Priority_Flag");
            entity.Property(e => e.Qaspec)
                .HasMaxLength(200)
                .HasColumnName("QASpec");
            entity.Property(e => e.Route).HasMaxLength(10);
            entity.Property(e => e.SoldToCode)
                .HasMaxLength(50)
                .HasColumnName("Sold_to_Code");
            entity.Property(e => e.TagBundle).HasMaxLength(500);
            entity.Property(e => e.TagPallet).HasMaxLength(500);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.Zone).HasMaxLength(10);
        });

        modelBuilder.Entity<CustomerSkic>(entity =>
        {
            entity.ToTable("CustomerSKIC");

            entity.Property(e => e.CustomerNo)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DistributionChannel)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Remark)
                .HasMaxLength(132)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SalesOrg)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DocumentS>(entity =>
        {
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.Snumber)
                .HasMaxLength(15)
                .HasColumnName("SNumber");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<DocumentSlist>(entity =>
        {
            entity.ToTable("DocumentSList");

            entity.Property(e => e.BoxStatus).HasMaxLength(50);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CustomerName).HasMaxLength(50);
            entity.Property(e => e.DuedateNew).HasColumnType("datetime");
            entity.Property(e => e.DuedateOld).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.Flute).HasMaxLength(10);
            entity.Property(e => e.MatDesc).HasMaxLength(40);
            entity.Property(e => e.MaterialNo).HasMaxLength(18);
            entity.Property(e => e.OrderItem)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.PartStatus).HasMaxLength(50);
            entity.Property(e => e.Pc)
                .HasMaxLength(20)
                .HasColumnName("PC");
            entity.Property(e => e.Process).HasMaxLength(2000);
            entity.Property(e => e.Remark).HasMaxLength(100);
            entity.Property(e => e.Snumber)
                .IsRequired()
                .HasMaxLength(15)
                .HasColumnName("SNumber");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<EorderingLog>(entity =>
        {
            entity.ToTable("EOrdering_Log");

            entity.Property(e => e.MaterialNo).HasMaxLength(18);
            entity.Property(e => e.JsonRequestBody).HasMaxLength(4000);
            entity.Property(e => e.RequestId).HasMaxLength(10);
            entity.Property(e => e.SentBy).HasMaxLength(20);
            entity.Property(e => e.SentDate).HasColumnType("datetime");
            entity.Property(e => e.StatusMessage).HasMaxLength(100);
        });

        modelBuilder.Entity<Flute>(entity =>
        {
            entity.Property(e => e.A).HasColumnName("a");
            entity.Property(e => e.B).HasColumnName("b");
            entity.Property(e => e.Bliners).HasColumnName("BLiners");
            entity.Property(e => e.Blname)
                .HasMaxLength(10)
                .HasColumnName("BLName");
            entity.Property(e => e.Bmedium).HasColumnName("BMedium");
            entity.Property(e => e.Bmname)
                .HasMaxLength(10)
                .HasColumnName("BMName");
            entity.Property(e => e.BoxPerBundleNoJoint).HasColumnName("BoxPerBundle_NoJoint");
            entity.Property(e => e.BshFlute)
                .HasMaxLength(2)
                .HasColumnName("BSH_Flute");
            entity.Property(e => e.C).HasColumnName("c");
            entity.Property(e => e.Cliners).HasColumnName("CLiners");
            entity.Property(e => e.Clname)
                .HasMaxLength(10)
                .HasColumnName("CLName");
            entity.Property(e => e.Cmedium).HasColumnName("CMedium");
            entity.Property(e => e.Cmname)
                .HasMaxLength(10)
                .HasColumnName("CMName");
            entity.Property(e => e.Code).HasMaxLength(4);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.D1).HasColumnName("d1");
            entity.Property(e => e.D2).HasColumnName("d2");
            entity.Property(e => e.Description).HasMaxLength(40);
            entity.Property(e => e.Dliners).HasColumnName("DLiners");
            entity.Property(e => e.Dlname)
                .HasMaxLength(10)
                .HasColumnName("DLName");
            entity.Property(e => e.Dmedium).HasColumnName("DMedium");
            entity.Property(e => e.Dmname)
                .HasMaxLength(10)
                .HasColumnName("DMName");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Flute1)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("Flute");
            entity.Property(e => e.Glname)
                .HasMaxLength(10)
                .HasColumnName("GLName");
            entity.Property(e => e.LayerPerPalletNoJoint).HasColumnName("LayerPerPallet_NoJoint");
            entity.Property(e => e.SpeedFactor).HasColumnName("Speed_factor");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.WasteStack).HasColumnName("Waste_Stack");
        });

        modelBuilder.Entity<FluteLayer>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Name).HasMaxLength(7);
            entity.Property(e => e.Tr).HasMaxLength(3);
        });

        modelBuilder.Entity<FluteTr>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tbl_FluteTR");

            entity.ToTable("FluteTR");

            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.FluteCode)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.Station)
                .IsRequired()
                .HasMaxLength(10);
        });

        modelBuilder.Entity<HierarchyLv2Matrix>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tbl_Hierarchy_Lv2_Matrix");

            entity.ToTable("Hierarchy_Lv2_Matrix");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.HierarchyLv2Code).HasMaxLength(5);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<HierarchyLv3>(entity =>
        {
            entity.ToTable("HierarchyLV3");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Hierarchy3).HasMaxLength(10);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<HierarchyLv4>(entity =>
        {
            entity.ToTable("HierarchyLV4");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Hierarchy4).HasMaxLength(10);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<HireMapping>(entity =>
        {
            entity.Property(e => e.GroupBu).HasColumnName("GroupBU");
            entity.Property(e => e.OrderId).HasColumnName("OrderID");
        });

        modelBuilder.Entity<HireOrder>(entity =>
        {
            entity.Property(e => e.OrderType).HasMaxLength(50);
        });

        modelBuilder.Entity<HoldMaterial>(entity =>
        {
            entity.Property(e => e.ChangeProductNo).HasMaxLength(20);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.HoldRemark).HasMaxLength(50);
            entity.Property(e => e.IsLocked).HasColumnName("isLocked");
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<HoldMaterialHistory>(entity =>
        {
            entity.Property(e => e.ChangeProductNo).HasMaxLength(20);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.HoldRemark).HasMaxLength(50);
            entity.Property(e => e.IsLocked).HasColumnName("isLocked");
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18);
        });

        modelBuilder.Entity<HoneyPaper>(entity =>
        {
            entity.HasKey(e => e.Grade);

            entity.Property(e => e.Grade).HasMaxLength(10);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<HvaMaster>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_HVAPresale");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.EffectiveDate)
                .HasColumnType("datetime")
                .HasColumnName("Effective_Date");
            entity.Property(e => e.Flag).HasMaxLength(1);
            entity.Property(e => e.HighDescription)
                .HasMaxLength(255)
                .HasColumnName("High_Description");
            entity.Property(e => e.HighGroup)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("High_Group");
            entity.Property(e => e.HighGroupName)
                .HasMaxLength(100)
                .HasColumnName("High_Group_Name");
            entity.Property(e => e.HighValue)
                .IsRequired()
                .HasMaxLength(4)
                .HasColumnName("High_Value");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.Weight).HasColumnType("decimal(18, 2)");
        });

        modelBuilder.Entity<InfoRecordSourceList>(entity =>
        {
            entity.Property(e => e.Effprice)
                .HasColumnType("money")
                .HasColumnName("EFFPRICE");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Fixed)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("FIXED");
            entity.Property(e => e.Incoterm)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("INCOTERM");
            entity.Property(e => e.Materialno)
                .IsRequired()
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("MATERIALNO");
            entity.Property(e => e.Minqty)
                .HasColumnType("decimal(13, 3)")
                .HasColumnName("MINQTY");
            entity.Property(e => e.Netprice)
                .HasColumnType("money")
                .HasColumnName("NETPRICE");
            entity.Property(e => e.Nosourcelist).HasColumnName("NOSOURCELIST");
            entity.Property(e => e.Percentover)
                .HasColumnType("decimal(3, 1)")
                .HasColumnName("PERCENTOVER");
            entity.Property(e => e.Percentunder)
                .HasColumnType("decimal(3, 1)")
                .HasColumnName("PERCENTUNDER");
            entity.Property(e => e.Plant)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("PLANT");
            entity.Property(e => e.Priceunit)
                .HasColumnType("decimal(5, 0)")
                .HasColumnName("PRICEUNIT");
            entity.Property(e => e.Purgroup)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("PURGROUP");
            entity.Property(e => e.Purorg)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("PURORG");
            entity.Property(e => e.RecordedDate).HasColumnType("datetime");
            entity.Property(e => e.SourcelistValidfrom)
                .HasColumnType("datetime")
                .HasColumnName("SOURCELIST_VALIDFROM");
            entity.Property(e => e.SourcelistValidto)
                .HasColumnType("datetime")
                .HasColumnName("SOURCELIST_VALIDTO");
            entity.Property(e => e.Stdqty)
                .HasColumnType("decimal(13, 3)")
                .HasColumnName("STDQTY");
            entity.Property(e => e.Taxcode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TAXCODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.Unitofminqty)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("UNITOFMINQTY");
            entity.Property(e => e.Unitofnetprice)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("UNITOFNETPRICE");
            entity.Property(e => e.Unitofstdqty)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("UNITOFSTDQTY");
            entity.Property(e => e.Validto)
                .HasColumnType("datetime")
                .HasColumnName("VALIDTO");
            entity.Property(e => e.Vendorcode)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("VENDORCODE");
            entity.Property(e => e.Vendorname)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("VENDORNAME");
        });

        modelBuilder.Entity<InterfaceSystemApi>(entity =>
        {
            entity.ToTable("InterfaceSystemAPI");

            entity.Property(e => e.ApiUrl).HasMaxLength(200);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.SystemName).HasMaxLength(50);
            entity.Property(e => e.Username).HasMaxLength(50);
        });

        modelBuilder.Entity<JoinCharacter>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.CreateBy).HasMaxLength(50);
            entity.Property(e => e.CreateDate).HasColumnType("datetime");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.NameJoinCharacter).HasMaxLength(50);
            entity.Property(e => e.UpdateBy).HasMaxLength(50);
            entity.Property(e => e.UpdateDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<Joint>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Joint_1");

            entity.HasIndex(e => e.JointId, "Joint_Unique").IsUnique();

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.JointDescription)
                .HasMaxLength(50)
                .HasColumnName("Joint_Description");
            entity.Property(e => e.JointId)
                .IsRequired()
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("Joint_ID");
            entity.Property(e => e.JointName)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("Joint_Name");
            entity.Property(e => e.KiwiJoinCodeInner)
                .HasMaxLength(2)
                .HasColumnName("Kiwi_JoinCode_Inner");
            entity.Property(e => e.KiwiJoinCodeOuter)
                .HasMaxLength(2)
                .HasColumnName("Kiwi_JoinCode_Outer");
            entity.Property(e => e.UnitDesc)
                .HasMaxLength(2)
                .HasColumnName("Unit_Desc");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<KindOfProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tbl_KindOfProduct");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<KindOfProductGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tbl_KindOfProductGroup");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<LogPrintMo>(entity =>
        {
            entity.ToTable("LogPrintMO");

            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.OrderItem).HasMaxLength(15);
            entity.Property(e => e.PrintedBy).HasMaxLength(20);
            entity.Property(e => e.PrintedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<Machine>(entity =>
        {
            entity.Property(e => e.Cap).HasColumnName("CAP");
            entity.Property(e => e.CapChk).HasColumnName("CAP_Chk");
            entity.Property(e => e.CapUnit)
                .HasMaxLength(50)
                .HasColumnName("CAP_Unit");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.CodeMachineType).HasMaxLength(50);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CutterNum).HasDefaultValue(1);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.GlueType).HasMaxLength(100);
            entity.Property(e => e.IsCalPaperwidth).HasColumnName("IsCal_paperwidth");
            entity.Property(e => e.IsPropCor).HasColumnName("IsProp_Cor");
            entity.Property(e => e.IsPropDieCut).HasColumnName("IsProp_DieCut");
            entity.Property(e => e.IsPropPrint).HasColumnName("IsProp_print");
            entity.Property(e => e.IsPropRepeatLenght).HasColumnName("isPropRepeatLenght");
            entity.Property(e => e.Machine1)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("Machine");
            entity.Property(e => e.MachineGroup)
                .HasMaxLength(3)
                .HasColumnName("Machine_Group");
            entity.Property(e => e.MachineSubType).HasMaxLength(50);
            entity.Property(e => e.MachineType).HasMaxLength(50);
            entity.Property(e => e.MaxTonsFg)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("MaxTonsFG");
            entity.Property(e => e.Maxa).HasDefaultValue(1);
            entity.Property(e => e.Maxb).HasDefaultValue(1);
            entity.Property(e => e.Maxc).HasDefaultValue(1);
            entity.Property(e => e.Maxd).HasDefaultValue(1);
            entity.Property(e => e.Maxe).HasDefaultValue(1);
            entity.Property(e => e.Maxl).HasDefaultValue(1);
            entity.Property(e => e.Maxw).HasDefaultValue(1);
            entity.Property(e => e.McMove).HasColumnName("MC_Move");
            entity.Property(e => e.Mina).HasDefaultValue(1);
            entity.Property(e => e.Minb).HasDefaultValue(1);
            entity.Property(e => e.Minc).HasDefaultValue(1);
            entity.Property(e => e.Mind).HasDefaultValue(1);
            entity.Property(e => e.Mine).HasDefaultValue(1);
            entity.Property(e => e.Minl).HasDefaultValue(1);
            entity.Property(e => e.Minw).HasDefaultValue(1);
            entity.Property(e => e.PaperRollWidth).HasDefaultValue(1);
            entity.Property(e => e.PlanCode)
                .HasMaxLength(10)
                .HasColumnName("Plan_Code");
            entity.Property(e => e.Plant).HasMaxLength(10);
            entity.Property(e => e.PostTimeWait).HasColumnType("datetime");
            entity.Property(e => e.PrepareTimeWait).HasColumnType("datetime");
            entity.Property(e => e.Priority).HasDefaultValue(1);
            entity.Property(e => e.Remark).HasMaxLength(255);
            entity.Property(e => e.SeqNo).HasColumnName("Seq_No");
            entity.Property(e => e.ShowProcess).HasDefaultValue(true);
            entity.Property(e => e.SpeMax).HasColumnName("Spe_Max");
            entity.Property(e => e.SpeMin).HasColumnName("Spe_Min");
            entity.Property(e => e.SpePercen).HasColumnName("Spe_Percen");
            entity.Property(e => e.SpeTranf).HasColumnName("Spe_Tranf");
            entity.Property(e => e.StdDowntime).HasColumnName("Std_Downtime");
            entity.Property(e => e.StdProcess).HasColumnName("Std_Process");
            entity.Property(e => e.StdSetupTime).HasColumnName("Std_SetupTime");
            entity.Property(e => e.StdSpeed).HasColumnName("Std_Speed");
            entity.Property(e => e.TimeUnit)
                .HasMaxLength(50)
                .HasColumnName("Time_Unit");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<MachineFluteTrim>(entity =>
        {
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.Flute)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.Machine)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<MachineGroup>(entity =>
        {
            entity.Property(e => e.GroupCode)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.GroupDescription).HasMaxLength(150);
            entity.Property(e => e.GroupName).HasMaxLength(50);
        });

        modelBuilder.Entity<MainMenus>(entity =>
        {
            entity.Property(e => e.Action).HasMaxLength(50);
            entity.Property(e => e.Controller).HasMaxLength(50);
            entity.Property(e => e.IconName).HasMaxLength(50);
            entity.Property(e => e.MenuNameEn)
                .HasMaxLength(100)
                .HasColumnName("MenuNameEN");
            entity.Property(e => e.MenuNameTh)
                .HasMaxLength(100)
                .HasColumnName("MenuNameTH");
        });

        modelBuilder.Entity<MapCost>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tbl_MapCost");

            entity.ToTable("Map_Cost");

            entity.Property(e => e.CostField)
                .HasMaxLength(20)
                .HasColumnName("Cost_Field");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Hierarchy2)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.Hierarchy3)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.Hierarchy4).HasMaxLength(10);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<MappingPg>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MappingPG");

            entity.Property(e => e.Code).HasMaxLength(255);
            entity.Property(e => e.Desc).HasMaxLength(255);
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.Map)
                .HasMaxLength(255)
                .HasColumnName("map");
        });

        modelBuilder.Entity<MasterData>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MasterData_1");

            entity.HasIndex(e => e.MaterialNo, "NonClusteredIndex-MatNo-MasterData");

            entity.Property(e => e.AttachFileMoPath).HasMaxLength(100);
            entity.Property(e => e.Bl)
                .HasMaxLength(10)
                .HasColumnName("BL");
            entity.Property(e => e.Blweigth).HasColumnName("BLWeigth");
            entity.Property(e => e.Bm)
                .HasMaxLength(10)
                .HasColumnName("BM");
            entity.Property(e => e.Bmweigth).HasColumnName("BMWeigth");
            entity.Property(e => e.Board).HasMaxLength(50);
            entity.Property(e => e.Boistatus)
                .HasMaxLength(100)
                .HasColumnName("BOIStatus");
            entity.Property(e => e.BomUom)
                .HasMaxLength(50)
                .HasColumnName("BOM_UOM");
            entity.Property(e => e.BoxArea).HasColumnName("Box_Area");
            entity.Property(e => e.BoxType)
                .HasMaxLength(60)
                .HasColumnName("Box_Type");
            entity.Property(e => e.Change).HasMaxLength(100);
            entity.Property(e => e.ChangeHistory).HasMaxLength(100);
            entity.Property(e => e.ChangeInfo).HasMaxLength(100);
            entity.Property(e => e.CipinvType)
                .HasMaxLength(10)
                .HasColumnName("CIPInvType");
            entity.Property(e => e.Cl)
                .HasMaxLength(10)
                .HasColumnName("CL");
            entity.Property(e => e.Clweigth).HasColumnName("CLWeigth");
            entity.Property(e => e.Cm)
                .HasMaxLength(10)
                .HasColumnName("CM");
            entity.Property(e => e.Cmweigth).HasColumnName("CMWeigth");
            entity.Property(e => e.Code).HasMaxLength(10);
            entity.Property(e => e.CreateDate).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CusId)
                .HasMaxLength(10)
                .HasColumnName("Cus_ID");
            entity.Property(e => e.CustCode)
                .HasMaxLength(10)
                .HasColumnName("Cust_Code");
            entity.Property(e => e.CustComment).HasMaxLength(160);
            entity.Property(e => e.CustInvType).HasMaxLength(10);
            entity.Property(e => e.CustName)
                .HasMaxLength(200)
                .HasColumnName("Cust_Name");
            entity.Property(e => e.CutSheetLengInch)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("CutSheetLeng_Inch");
            entity.Property(e => e.CutSheetWidInch)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("CutSheetWid_Inch");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(40);
            entity.Property(e => e.DiecutPictPath)
                .HasMaxLength(100)
                .HasColumnName("DiecutPict_Path");
            entity.Property(e => e.Dl)
                .HasMaxLength(10)
                .HasColumnName("DL");
            entity.Property(e => e.Dlweigth).HasColumnName("DLWeigth");
            entity.Property(e => e.Dm)
                .HasMaxLength(10)
                .HasColumnName("DM");
            entity.Property(e => e.Dmweigth).HasColumnName("DMWeigth");
            entity.Property(e => e.EanCode).HasMaxLength(13);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.FgMaterial)
                .HasMaxLength(18)
                .HasColumnName("FG_Material");
            entity.Property(e => e.FgpicPath)
                .HasMaxLength(100)
                .HasColumnName("FGPic_Path");
            entity.Property(e => e.Flute).HasMaxLength(10);
            entity.Property(e => e.FluteDesc).HasMaxLength(40);
            entity.Property(e => e.FootTagBundle).HasMaxLength(500);
            entity.Property(e => e.FootTagPallet).HasMaxLength(500);
            entity.Property(e => e.Freetext1TagBundle).HasMaxLength(500);
            entity.Property(e => e.Freetext1TagPallet).HasMaxLength(500);
            entity.Property(e => e.Freetext2TagBundle).HasMaxLength(500);
            entity.Property(e => e.Freetext2TagPallet).HasMaxLength(500);
            entity.Property(e => e.Freetext3TagBundle).HasMaxLength(500);
            entity.Property(e => e.Freetext3TagPallet).HasMaxLength(500);
            entity.Property(e => e.FscCode).HasMaxLength(50);
            entity.Property(e => e.FscFgCode).HasMaxLength(50);
            entity.Property(e => e.Gl)
                .HasMaxLength(10)
                .HasColumnName("GL");
            entity.Property(e => e.Glweigth).HasColumnName("GLWeigth");
            entity.Property(e => e.HeadTagBundle).HasMaxLength(500);
            entity.Property(e => e.HeadTagPallet).HasMaxLength(500);
            entity.Property(e => e.Hierarchy)
                .IsRequired()
                .HasMaxLength(18);
            entity.Property(e => e.HighGroup)
                .HasMaxLength(2)
                .HasColumnName("High_Group");
            entity.Property(e => e.HighValue)
                .HasMaxLength(4)
                .HasColumnName("High_Value");
            entity.Property(e => e.HireFactory).HasMaxLength(10);
            entity.Property(e => e.IndDes)
                .HasMaxLength(50)
                .HasColumnName("Ind_Des");
            entity.Property(e => e.IndGrp)
                .HasMaxLength(3)
                .HasColumnName("Ind_Grp");
            entity.Property(e => e.IsTransfer).HasDefaultValue(false);
            entity.Property(e => e.JoinCharacter).HasMaxLength(50);
            entity.Property(e => e.JoinType).HasMaxLength(60);
            entity.Property(e => e.JointId)
                .HasMaxLength(3)
                .HasColumnName("Joint_ID");
            entity.Property(e => e.Language).HasMaxLength(3);
            entity.Property(e => e.LastUpdate).HasColumnType("datetime");
            entity.Property(e => e.MatCopy).HasMaxLength(18);
            entity.Property(e => e.MaterialComment).HasMaxLength(160);
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.MaterialType)
                .HasMaxLength(2)
                .HasColumnName("Material_Type");
            entity.Property(e => e.NoSlot).HasColumnName("No_Slot");
            entity.Property(e => e.NoTagBundle).HasMaxLength(50);
            entity.Property(e => e.NoneStandardPaper).HasDefaultValue(false);
            entity.Property(e => e.OuterJoin).HasColumnName("Outer_Join");
            entity.Property(e => e.PalletBrand).HasMaxLength(255);
            entity.Property(e => e.PalletSize).HasMaxLength(10);
            entity.Property(e => e.PalletType).HasMaxLength(255);
            entity.Property(e => e.PalletizationPath)
                .HasMaxLength(100)
                .HasColumnName("Palletization_Path");
            entity.Property(e => e.PartNo)
                .HasMaxLength(40)
                .HasColumnName("Part_No");
            entity.Property(e => e.Pc)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("PC");
            entity.Property(e => e.PdisStatus)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("PDIS_Status");
            entity.Property(e => e.PicPallet).HasMaxLength(100);
            entity.Property(e => e.PiecePatch).HasColumnName("Piece_Patch");
            entity.Property(e => e.PieceSet).HasColumnName("Piece_Set");
            entity.Property(e => e.Plant).HasMaxLength(10);
            entity.Property(e => e.PltAxleHeight).HasColumnName("Plt_Axle_Height");
            entity.Property(e => e.PltBeam).HasColumnName("Plt_Beam");
            entity.Property(e => e.PltDoubleAxle).HasColumnName("Plt_Double_axle");
            entity.Property(e => e.PltFloorAbove).HasColumnName("Plt_Floor_Above");
            entity.Property(e => e.PltFloorUnder).HasColumnName("Plt_Floor_Under");
            entity.Property(e => e.PltLegDouble).HasColumnName("Plt_Leg_Double");
            entity.Property(e => e.PltLegSingle).HasColumnName("Plt_Leg_Single");
            entity.Property(e => e.PltSingleAxle).HasColumnName("Plt_Single_axle");
            entity.Property(e => e.PrintMasterPath)
                .HasMaxLength(100)
                .HasColumnName("PrintMaster_Path");
            entity.Property(e => e.PrintMethod)
                .HasMaxLength(50)
                .HasColumnName("Print_Method");
            entity.Property(e => e.PriorityFlag)
                .HasMaxLength(2)
                .HasColumnName("Priority_Flag");
            entity.Property(e => e.ProType)
                .HasMaxLength(60)
                .HasColumnName("Pro_Type");
            entity.Property(e => e.PsmId)
                .HasMaxLength(50)
                .HasColumnName("PSM_ID");
            entity.Property(e => e.PurTxt1)
                .HasMaxLength(40)
                .HasColumnName("Pur_Txt1");
            entity.Property(e => e.PurTxt2)
                .HasMaxLength(40)
                .HasColumnName("Pur_Txt2");
            entity.Property(e => e.PurTxt3)
                .HasMaxLength(40)
                .HasColumnName("Pur_Txt3");
            entity.Property(e => e.PurTxt4)
                .HasMaxLength(40)
                .HasColumnName("Pur_Txt4");
            entity.Property(e => e.RpacBrand).HasMaxLength(50);
            entity.Property(e => e.RpacLob).HasMaxLength(50);
            entity.Property(e => e.RpacPackagingType).HasMaxLength(50);
            entity.Property(e => e.RpacProgram).HasMaxLength(50);
            entity.Property(e => e.RscStyle)
                .HasMaxLength(50)
                .HasColumnName("RSC_Style");
            entity.Property(e => e.SaleOrg)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("Sale_Org");
            entity.Property(e => e.SaleText1)
                .HasMaxLength(40)
                .HasDefaultValue("")
                .HasColumnName("Sale_Text1");
            entity.Property(e => e.SaleText2)
                .HasMaxLength(40)
                .HasDefaultValue("")
                .HasColumnName("Sale_Text2");
            entity.Property(e => e.SaleText3)
                .HasMaxLength(40)
                .HasDefaultValue("")
                .HasColumnName("Sale_Text3");
            entity.Property(e => e.SaleText4)
                .HasMaxLength(40)
                .HasDefaultValue("")
                .HasColumnName("Sale_Text4");
            entity.Property(e => e.SaleUom)
                .HasMaxLength(50)
                .HasColumnName("Sale_UOM");
            entity.Property(e => e.SapStatus).HasColumnName("SAP_Status");
            entity.Property(e => e.ScoreW1).HasDefaultValue(0);
            entity.Property(e => e.Scorew10).HasDefaultValue(0);
            entity.Property(e => e.Scorew11).HasDefaultValue(0);
            entity.Property(e => e.Scorew12).HasDefaultValue(0);
            entity.Property(e => e.Scorew13).HasDefaultValue(0);
            entity.Property(e => e.Scorew14).HasDefaultValue(0);
            entity.Property(e => e.Scorew15).HasDefaultValue(0);
            entity.Property(e => e.Scorew16).HasDefaultValue(0);
            entity.Property(e => e.Scorew2).HasDefaultValue(0);
            entity.Property(e => e.Scorew3).HasDefaultValue(0);
            entity.Property(e => e.Scorew4).HasDefaultValue(0);
            entity.Property(e => e.Scorew5).HasDefaultValue(0);
            entity.Property(e => e.Scorew6).HasDefaultValue(0);
            entity.Property(e => e.Scorew7).HasDefaultValue(0);
            entity.Property(e => e.Scorew8).HasDefaultValue(0);
            entity.Property(e => e.Scorew9).HasDefaultValue(0);
            entity.Property(e => e.Semi1Path)
                .HasMaxLength(100)
                .HasColumnName("Semi1_Path");
            entity.Property(e => e.Semi2Path)
                .HasMaxLength(100)
                .HasColumnName("Semi2_Path");
            entity.Property(e => e.Semi3Path)
                .HasMaxLength(100)
                .HasColumnName("Semi3_Path");
            entity.Property(e => e.SemiFilePdfPath)
                .HasMaxLength(100)
                .HasColumnName("SemiFilePdf_Path");
            entity.Property(e => e.SheetArea).HasColumnName("Sheet_Area");
            entity.Property(e => e.SizeDimensions).HasMaxLength(32);
            entity.Property(e => e.StatusFlag)
                .HasMaxLength(30)
                .HasColumnName("Status_Flag");
            entity.Property(e => e.TagBundle).HasMaxLength(500);
            entity.Property(e => e.TagPallet).HasMaxLength(500);
            entity.Property(e => e.TopSheetMaterial)
                .HasMaxLength(18)
                .HasColumnName("TopSheet_Material");
            entity.Property(e => e.TranStatus).HasColumnName("Tran_Status");
            entity.Property(e => e.UnUpgradBoard).HasColumnName("UnUpgrad_Board");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.User).HasMaxLength(50);
            entity.Property(e => e.WeightBox).HasColumnName("Weight_Box");
            entity.Property(e => e.WeightSh).HasColumnName("Weight_Sh");
            entity.Property(e => e.WorkType).HasMaxLength(100);
        });

        modelBuilder.Entity<MasterRole>(entity =>
        {
            entity.HasKey(e => new { e.Id, e.RoleId })
                .HasName("PK_MASTER_ROLE")
                .IsClustered(false);

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.RoleDesc).HasMaxLength(100);
            entity.Property(e => e.RoleName).HasMaxLength(50);
        });

        modelBuilder.Entity<MasterUser>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MASTER_USER");

            entity.Property(e => e.AppName).HasMaxLength(50);
            entity.Property(e => e.Comment).HasColumnType("text");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.FirstNameEn).HasMaxLength(100);
            entity.Property(e => e.FirstNameTh).HasMaxLength(100);
            entity.Property(e => e.LastLoginDate).HasColumnType("datetime");
            entity.Property(e => e.LastLogoutDate).HasColumnType("datetime");
            entity.Property(e => e.LastNameEn).HasMaxLength(100);
            entity.Property(e => e.LastNameTh).HasMaxLength(100);
            entity.Property(e => e.LastPasswordChangeDate).HasColumnType("datetime");
            entity.Property(e => e.MobileNo).HasMaxLength(50);
            entity.Property(e => e.Password).HasMaxLength(100);
            entity.Property(e => e.PasswordHint).HasMaxLength(250);
            entity.Property(e => e.SaleOrg)
                .HasMaxLength(10)
                .HasColumnName("Sale_Org");
            entity.Property(e => e.Telephone).HasMaxLength(50);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.UserDomain).HasMaxLength(255);
            entity.Property(e => e.UserName).HasMaxLength(50);
        });

        modelBuilder.Entity<MaterialType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Running_Type");

            entity.Property(e => e.BomMaster)
                .HasDefaultValue(false)
                .HasComment("Production BOM and Salels BOM")
                .HasColumnName("BOM_Master");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.GroupId)
                .IsRequired()
                .HasMaxLength(2)
                .HasColumnName("Group_ID");
            entity.Property(e => e.Interface).HasDefaultValue(true);
            entity.Property(e => e.Inventory).HasDefaultValue(false);
            entity.Property(e => e.MatCode)
                .IsRequired()
                .HasMaxLength(2);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<MenuRole>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Menu");
        });

        modelBuilder.Entity<MoBoardAlternative>(entity =>
        {
            entity.HasKey(e => new { e.Id, e.OrderItem, e.BoardName });

            entity.ToTable("MO_Board_Alternative");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OrderItem).HasMaxLength(15);
            entity.Property(e => e.BoardName)
                .HasMaxLength(50)
                .HasColumnName("Board_Name");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Flute).HasMaxLength(5);
        });

        modelBuilder.Entity<MoBoardUse>(entity =>
        {
            entity.HasKey(e => new { e.Id, e.OrderItem }).HasName("PK_MO_Board_Master");

            entity.ToTable("MO_Board_Use");

            entity.HasIndex(e => new { e.FactoryCode, e.OrderItem }, "NonClusteredIndex-FactoryCode-OrderItem");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OrderItem).HasMaxLength(15);
            entity.Property(e => e.Bl)
                .HasMaxLength(10)
                .HasColumnName("BL");
            entity.Property(e => e.Bm)
                .HasMaxLength(10)
                .HasColumnName("BM");
            entity.Property(e => e.BoardId)
                .IsRequired()
                .HasMaxLength(4)
                .HasColumnName("Board_Id");
            entity.Property(e => e.BoardName)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("Board_Name");
            entity.Property(e => e.Cl)
                .HasMaxLength(10)
                .HasColumnName("CL");
            entity.Property(e => e.Cm)
                .HasMaxLength(10)
                .HasColumnName("CM");
            entity.Property(e => e.Dl)
                .HasMaxLength(10)
                .HasColumnName("DL");
            entity.Property(e => e.Dm)
                .HasMaxLength(10)
                .HasColumnName("DM");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Flute).HasMaxLength(5);
            entity.Property(e => e.Gl)
                .HasMaxLength(10)
                .HasColumnName("GL");
            entity.Property(e => e.Kiwi)
                .HasMaxLength(50)
                .HasColumnName("KIWI");
        });

        modelBuilder.Entity<MoBomRawMat>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MO_BOM_Rawmat");

            entity.ToTable("MO_BOM_RawMat");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BomAmount)
                .HasColumnType("decimal(18, 5)")
                .HasColumnName("BOM_Amount");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(50)
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateDate)
                .HasColumnType("datetime")
                .HasColumnName("CREATE_DATE");
            entity.Property(e => e.CutSize).HasColumnName("CUT_SIZE");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.FgMaterial)
                .HasMaxLength(50)
                .HasColumnName("FG_Material");
            entity.Property(e => e.Lay).HasColumnName("LAY");
            entity.Property(e => e.Length)
                .HasColumnType("decimal(18, 5)")
                .HasColumnName("LENGTH");
            entity.Property(e => e.MaterialDescription)
                .HasMaxLength(1000)
                .HasColumnName("Material_Description");
            entity.Property(e => e.MaterialGroup)
                .HasMaxLength(100)
                .HasColumnName("Material_Group");
            entity.Property(e => e.MaterialNumber)
                .HasMaxLength(100)
                .HasColumnName("Material_Number");
            entity.Property(e => e.MaterialType).HasColumnName("Material_Type");
            entity.Property(e => e.NetWeight)
                .HasColumnType("decimal(18, 5)")
                .HasColumnName("NET_Weight");
            entity.Property(e => e.OldMaterialNumber)
                .HasMaxLength(100)
                .HasColumnName("OLD_Material_Number");
            entity.Property(e => e.OrderItem).HasMaxLength(15);
            entity.Property(e => e.Plant).HasMaxLength(100);
            entity.Property(e => e.SizeUom)
                .HasMaxLength(100)
                .HasColumnName("SIZE_UOM");
            entity.Property(e => e.Uom)
                .HasMaxLength(100)
                .HasColumnName("UOM");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateDate)
                .HasColumnType("datetime")
                .HasColumnName("UPDATE_DATE");
            entity.Property(e => e.Width)
                .HasColumnType("decimal(18, 5)")
                .HasColumnName("WIDTH");
        });

        modelBuilder.Entity<MoData>(entity =>
        {
            entity.HasKey(e => new { e.OrderItem, e.Id }).IsClustered(false);

            entity.ToTable("MO_DATA");

            entity.HasIndex(e => e.SoKiwi, "IX_MO_DATA");

            entity.HasIndex(e => new { e.FactoryCode, e.OrderItem }, "NonClusteredIndex-20200330-132603");

            entity.Property(e => e.OrderItem).HasMaxLength(15);
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.Batch).HasMaxLength(10);
            entity.Property(e => e.CreatedBy).HasMaxLength(20);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CustRecvTime)
                .HasMaxLength(10)
                .HasColumnName("Cust_recv_time");
            entity.Property(e => e.DateTimeStamp)
                .HasMaxLength(12)
                .HasDefaultValueSql("(((right(datepart(year,getdate()),(2))+right('0'+CONVERT([nvarchar](2),datepart(month,getdate()),(0)),(2)))+right('0'+CONVERT([nvarchar](2),datepart(day,getdate()),(0)),(2)))+'000000')");
            entity.Property(e => e.District).HasMaxLength(60);
            entity.Property(e => e.DueDate)
                .HasColumnType("datetime")
                .HasColumnName("Due_Date");
            entity.Property(e => e.DueText)
                .HasMaxLength(8)
                .HasColumnName("Due_Text");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.InterfaceTips)
                .HasDefaultValue(false)
                .HasColumnName("Interface_TIPs");
            entity.Property(e => e.ItemNote)
                .HasMaxLength(60)
                .HasColumnName("Item_Note");
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.MoFrom).HasMaxLength(5);
            entity.Property(e => e.MoStatus)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("MO_Status");
            entity.Property(e => e.Morno)
                .HasMaxLength(20)
                .HasColumnName("MORNo");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.OrderQuant).HasColumnName("Order_Quant");
            entity.Property(e => e.OriginalDueDate).HasColumnType("datetime");
            entity.Property(e => e.PlanStatus).HasMaxLength(50);
            entity.Property(e => e.PoNo)
                .HasMaxLength(25)
                .HasColumnName("PO_No");
            entity.Property(e => e.Printed).HasDefaultValue(0);
            entity.Property(e => e.SboExternalNumber)
                .HasMaxLength(50)
                .HasColumnName("SBO_External_Number");
            entity.Property(e => e.CustRecvTime)
                .HasMaxLength(10)
                .HasColumnName("Cust_recv_time");
            entity.Property(e => e.SentKiwi).HasColumnName("SentKIWI");
            entity.Property(e => e.ShipTo)
                .HasMaxLength(50)
                .HasColumnName("Ship_to");
            entity.Property(e => e.SoKiwi)
                .HasMaxLength(15)
                .HasColumnName("SO_Kiwi");
            entity.Property(e => e.SoldTo)
                .HasMaxLength(50)
                .HasColumnName("Sold_to");
            entity.Property(e => e.SquareInch).HasColumnName("Square_INCH");
            entity.Property(e => e.TargetQuant).HasColumnName("Target_Quant");
            entity.Property(e => e.ToleranceOver).HasColumnName("Tolerance_Over");
            entity.Property(e => e.ToleranceUnder).HasColumnName("Tolerance_Under");
            entity.Property(e => e.UpdatedBy).HasMaxLength(20);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.UpdatedDateIntfMo).HasColumnType("datetime");
        });

        modelBuilder.Entity<MoDatalog>(entity =>
        {
            entity.HasKey(e => new { e.Id, e.OrderItem });

            entity.ToTable("MO_DATALog");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.OrderItem).HasMaxLength(15);
            entity.Property(e => e.Batch).HasMaxLength(10);
            entity.Property(e => e.DateTimeStamp).HasMaxLength(12);
            entity.Property(e => e.District).HasMaxLength(60);
            entity.Property(e => e.DueDate)
                .HasColumnType("datetime")
                .HasColumnName("Due_Date");
            entity.Property(e => e.DueText)
                .HasMaxLength(8)
                .HasColumnName("Due_Text");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.ItemNote)
                .HasMaxLength(60)
                .HasColumnName("Item_Note");
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.MoStatus)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("MO_Status");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.OrderQuant).HasColumnName("Order_Quant");
            entity.Property(e => e.PoNo)
                .HasMaxLength(50)
                .HasColumnName("PO_No");
            entity.Property(e => e.ShipTo)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("Ship_to");
            entity.Property(e => e.SoldTo)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("Sold_to");
            entity.Property(e => e.TargetQuant).HasColumnName("Target_Quant");
            entity.Property(e => e.ToleranceOver).HasColumnName("Tolerance_Over");
            entity.Property(e => e.ToleranceUnder).HasColumnName("Tolerance_Under");
        });

        modelBuilder.Entity<MoRouting>(entity =>
        {
            entity.HasKey(e => new { e.OrderItem, e.SeqNo, e.MaterialNo, e.Id });

            entity.ToTable("MO_Routing");

            entity.HasIndex(e => new { e.FactoryCode, e.OrderItem }, "NonClusteredIndex-20200330-132645");

            entity.Property(e => e.OrderItem).HasMaxLength(15);
            entity.Property(e => e.SeqNo).HasColumnName("Seq_No");
            entity.Property(e => e.MaterialNo)
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.Alternative1)
                .HasMaxLength(50)
                .HasDefaultValue("");
            entity.Property(e => e.Alternative2)
                .HasMaxLength(50)
                .HasDefaultValue("");
            entity.Property(e => e.Alternative3).HasMaxLength(50);
            entity.Property(e => e.Alternative4).HasMaxLength(50);
            entity.Property(e => e.Alternative5).HasMaxLength(50);
            entity.Property(e => e.Alternative6).HasMaxLength(50);
            entity.Property(e => e.Alternative7).HasMaxLength(50);
            entity.Property(e => e.Alternative8).HasMaxLength(50);
            entity.Property(e => e.BlockNo)
                .HasMaxLength(50)
                .HasColumnName("Block_No");
            entity.Property(e => e.BlockNo2).HasMaxLength(50);
            entity.Property(e => e.BlockNo3).HasMaxLength(50);
            entity.Property(e => e.BlockNo4).HasMaxLength(50);
            entity.Property(e => e.BlockNo5).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant2).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant3).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant4).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant5).HasMaxLength(50);
            entity.Property(e => e.Color1).HasMaxLength(20);
            entity.Property(e => e.Color2).HasMaxLength(20);
            entity.Property(e => e.Color3).HasMaxLength(20);
            entity.Property(e => e.Color4).HasMaxLength(20);
            entity.Property(e => e.Color5).HasMaxLength(20);
            entity.Property(e => e.Color6).HasMaxLength(20);
            entity.Property(e => e.Color7).HasMaxLength(20);
            entity.Property(e => e.Color8).HasMaxLength(20);
            entity.Property(e => e.ColorArea1).HasColumnName("Color_Area1");
            entity.Property(e => e.ColorArea2).HasColumnName("Color_Area2");
            entity.Property(e => e.ColorArea3).HasColumnName("Color_Area3");
            entity.Property(e => e.ColorArea4).HasColumnName("Color_Area4");
            entity.Property(e => e.ColorArea5).HasColumnName("Color_Area5");
            entity.Property(e => e.ColorArea6).HasColumnName("Color_Area6");
            entity.Property(e => e.ColorArea7).HasColumnName("Color_Area7");
            entity.Property(e => e.ColorArea8).HasColumnName("Color_Area8");
            entity.Property(e => e.ColorCount).HasColumnName("Color_count");
            entity.Property(e => e.ColourCount).HasColumnName("Colour_Count");
            entity.Property(e => e.ControllerCode).HasMaxLength(10);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CustBarcodeNo).HasMaxLength(20);
            entity.Property(e => e.CutNo).HasColumnName("Cut_No");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.JoinMatNo)
                .HasMaxLength(18)
                .HasColumnName("Join_Mat_no");
            entity.Property(e => e.Machine).HasMaxLength(50);
            entity.Property(e => e.MatCode)
                .HasMaxLength(50)
                .HasColumnName("Mat_Code");
            entity.Property(e => e.McMove).HasColumnName("MC_Move");
            entity.Property(e => e.MylaNo)
                .HasMaxLength(50)
                .HasColumnName("Myla_No");
            entity.Property(e => e.MylaNo2).HasMaxLength(50);
            entity.Property(e => e.MylaNo3).HasMaxLength(50);
            entity.Property(e => e.MylaNo4).HasMaxLength(50);
            entity.Property(e => e.MylaNo5).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant2).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant3).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant4).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant5).HasMaxLength(50);
            entity.Property(e => e.MylaSize).HasMaxLength(50);
            entity.Property(e => e.NoOpenIn).HasColumnName("No_Open_in");
            entity.Property(e => e.NoOpenOut).HasColumnName("No_Open_out");
            entity.Property(e => e.NoneBlk).HasColumnName("None_Blk");
            entity.Property(e => e.PaperWidth).HasColumnName("Paper_Width");
            entity.Property(e => e.PlanCode)
                .HasMaxLength(10)
                .HasColumnName("Plan_Code");
            entity.Property(e => e.PlanProgramCode).HasMaxLength(10);
            entity.Property(e => e.Plant).HasMaxLength(10);
            entity.Property(e => e.PlateNo)
                .HasMaxLength(50)
                .HasColumnName("Plate_No");
            entity.Property(e => e.PlateNo2).HasMaxLength(50);
            entity.Property(e => e.PlateNo3).HasMaxLength(50);
            entity.Property(e => e.PlateNo4).HasMaxLength(50);
            entity.Property(e => e.PlateNo5).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant2).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant3).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant4).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant5).HasMaxLength(50);
            entity.Property(e => e.PostTm).HasColumnName("Post_tm");
            entity.Property(e => e.PrepareTm).HasColumnName("Prepare_tm");
            entity.Property(e => e.RemarkInprocess)
                .HasMaxLength(300)
                .HasColumnName("Remark_Inprocess");
            entity.Property(e => e.RotateIn).HasColumnName("Rotate_In");
            entity.Property(e => e.RotateOut).HasColumnName("Rotate_Out");
            entity.Property(e => e.RunWaste).HasColumnName("Run_waste");
            entity.Property(e => e.SboExternalNumber)
                .HasMaxLength(50)
                .HasColumnName("SBO_External_Number");
            entity.Property(e => e.ScoreGap).HasColumnName("Score_Gap");
            entity.Property(e => e.ScoreType)
                .HasMaxLength(10)
                .HasColumnName("Score_type");
            entity.Property(e => e.SemiBlk).HasColumnName("Semi_Blk");
            entity.Property(e => e.SeparatMatNo)
                .HasMaxLength(18)
                .HasColumnName("Separat_Mat_no");
            entity.Property(e => e.SetupTm).HasColumnName("Setup_tm");
            entity.Property(e => e.SetupWaste).HasColumnName("Setup_waste");
            entity.Property(e => e.Shade1).HasMaxLength(10);
            entity.Property(e => e.Shade2).HasMaxLength(10);
            entity.Property(e => e.Shade3).HasMaxLength(10);
            entity.Property(e => e.Shade4).HasMaxLength(10);
            entity.Property(e => e.Shade5).HasMaxLength(10);
            entity.Property(e => e.Shade6).HasMaxLength(10);
            entity.Property(e => e.Shade7).HasMaxLength(10);
            entity.Property(e => e.Shade8).HasMaxLength(10);
            entity.Property(e => e.SheetInLeg).HasColumnName("Sheet_in_Leg");
            entity.Property(e => e.SheetInWid).HasColumnName("Sheet_in_Wid");
            entity.Property(e => e.SheetOutLeg).HasColumnName("Sheet_out_Leg");
            entity.Property(e => e.SheetOutWid).HasColumnName("Sheet_out_Wid");
            entity.Property(e => e.ShipBlk).HasColumnName("Ship_Blk");
            entity.Property(e => e.SkicLog)
                .HasDefaultValue(0)
                .HasColumnName("SKIC_Log");
            entity.Property(e => e.StackHeight).HasColumnName("Stack_Height");
            entity.Property(e => e.StanBlk).HasColumnName("Stan_Blk");
            entity.Property(e => e.StdProcess).HasColumnName("Std_Process");
            entity.Property(e => e.TearTapeDistance).HasMaxLength(100);
            entity.Property(e => e.TrimCode).HasColumnName("Trim_Code");
            entity.Property(e => e.TrimType).HasColumnName("Trim_Type");
            entity.Property(e => e.UnUpgradBoard).HasColumnName("UnUpgrad_Board");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.WasteLeg).HasColumnName("Waste_Leg");
            entity.Property(e => e.WasteWid).HasColumnName("Waste_Wid");
            entity.Property(e => e.WeightIn).HasColumnName("Weight_in");
            entity.Property(e => e.WeightOut).HasColumnName("Weight_out");
        });

        modelBuilder.Entity<MoSpec>(entity =>
        {
            entity.ToTable("MO_Spec");

            entity.HasIndex(e => new { e.FactoryCode, e.OrderItem }, "NonClusteredIndex-20200330-132710");

            entity.HasIndex(e => e.MaterialNo, "NonClusteredIndex-MatNo-MoSpec");

            entity.HasIndex(e => e.OrderItem, "NonClusteredIndex-OrderItem-MoSpec");

            entity.HasIndex(e => new { e.FactoryCode, e.OrderItem, e.MaterialNo }, "NonClusteredIndex-Unique-MoSpec").IsUnique();

            entity.Property(e => e.AttachFileMoPath).HasMaxLength(100);
            entity.Property(e => e.Bl)
                .HasMaxLength(10)
                .HasColumnName("BL");
            entity.Property(e => e.Blweigth).HasColumnName("BLWeigth");
            entity.Property(e => e.Bm)
                .HasMaxLength(10)
                .HasColumnName("BM");
            entity.Property(e => e.Bmweigth).HasColumnName("BMWeigth");
            entity.Property(e => e.Board).HasMaxLength(50);
            entity.Property(e => e.BomUom)
                .HasMaxLength(50)
                .HasColumnName("BOM_UOM");
            entity.Property(e => e.BoxArea).HasColumnName("Box_Area");
            entity.Property(e => e.BoxType)
                .HasMaxLength(60)
                .HasColumnName("Box_Type");
            entity.Property(e => e.Change).HasMaxLength(100);
            entity.Property(e => e.ChangeHistory).HasMaxLength(100);
            entity.Property(e => e.ChangeInfo).HasMaxLength(100);
            entity.Property(e => e.CipinvType)
                .HasMaxLength(10)
                .HasColumnName("CIPInvType");
            entity.Property(e => e.Cl)
                .HasMaxLength(10)
                .HasColumnName("CL");
            entity.Property(e => e.Clweigth).HasColumnName("CLWeigth");
            entity.Property(e => e.Cm)
                .HasMaxLength(10)
                .HasColumnName("CM");
            entity.Property(e => e.Cmweigth).HasColumnName("CMWeigth");
            entity.Property(e => e.Code).HasMaxLength(20);
            entity.Property(e => e.CreateDate).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CusId)
                .HasMaxLength(10)
                .HasColumnName("Cus_ID");
            entity.Property(e => e.CustCode)
                .HasMaxLength(10)
                .HasColumnName("Cust_Code");
            entity.Property(e => e.CustComment).HasMaxLength(160);
            entity.Property(e => e.CustInvType).HasMaxLength(10);
            entity.Property(e => e.CustName)
                .HasMaxLength(200)
                .HasColumnName("Cust_Name");
            entity.Property(e => e.CutSheetLengInch)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("CutSheetLeng_Inch");
            entity.Property(e => e.CutSheetWidInch)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("CutSheetWid_Inch");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(40);
            entity.Property(e => e.DiecutPictPath)
                .HasMaxLength(100)
                .HasColumnName("DiecutPict_Path");
            entity.Property(e => e.Dl)
                .HasMaxLength(10)
                .HasColumnName("DL");
            entity.Property(e => e.Dlweigth).HasColumnName("DLWeigth");
            entity.Property(e => e.Dm)
                .HasMaxLength(10)
                .HasColumnName("DM");
            entity.Property(e => e.Dmweigth).HasColumnName("DMWeigth");
            entity.Property(e => e.EanCode).HasMaxLength(13);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.FgMaterial)
                .HasMaxLength(18)
                .HasColumnName("FG_Material");
            entity.Property(e => e.FgpicPath)
                .HasMaxLength(100)
                .HasColumnName("FGPic_Path");
            entity.Property(e => e.Flute).HasMaxLength(10);
            entity.Property(e => e.FluteDesc).HasMaxLength(40);
            entity.Property(e => e.FootTagBundle).HasMaxLength(500);
            entity.Property(e => e.FootTagPallet).HasMaxLength(500);
            entity.Property(e => e.Freetext1TagBundle).HasMaxLength(500);
            entity.Property(e => e.Freetext1TagPallet).HasMaxLength(500);
            entity.Property(e => e.Freetext2TagBundle).HasMaxLength(500);
            entity.Property(e => e.Freetext2TagPallet).HasMaxLength(500);
            entity.Property(e => e.Freetext3TagBundle).HasMaxLength(500);
            entity.Property(e => e.Freetext3TagPallet).HasMaxLength(500);
            entity.Property(e => e.Gl)
                .HasMaxLength(10)
                .HasColumnName("GL");
            entity.Property(e => e.Glweigth).HasColumnName("GLWeigth");
            entity.Property(e => e.HeadTagBundle).HasMaxLength(500);
            entity.Property(e => e.HeadTagPallet).HasMaxLength(500);
            entity.Property(e => e.Hierarchy)
                .IsRequired()
                .HasMaxLength(18);
            entity.Property(e => e.HighGroup)
                .HasMaxLength(2)
                .HasColumnName("High_Group");
            entity.Property(e => e.HighValue)
                .HasMaxLength(4)
                .HasColumnName("High_Value");
            entity.Property(e => e.HireFactory).HasMaxLength(10);
            entity.Property(e => e.IndDes)
                .HasMaxLength(50)
                .HasColumnName("Ind_Des");
            entity.Property(e => e.IndGrp)
                .HasMaxLength(3)
                .HasColumnName("Ind_Grp");
            entity.Property(e => e.JoinCharacter).HasMaxLength(50);
            entity.Property(e => e.JoinType).HasMaxLength(60);
            entity.Property(e => e.JointId)
                .HasMaxLength(3)
                .HasColumnName("Joint_ID");
            entity.Property(e => e.Language).HasMaxLength(3);
            entity.Property(e => e.LastUpdate).HasColumnType("datetime");
            entity.Property(e => e.MatCopy).HasMaxLength(18);
            entity.Property(e => e.MaterialComment).HasMaxLength(160);
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.MaterialType)
                .HasMaxLength(2)
                .HasColumnName("Material_Type");
            entity.Property(e => e.NoSlot).HasColumnName("No_Slot");
            entity.Property(e => e.NoTagBundle).HasMaxLength(50);
            entity.Property(e => e.OrderItem)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.OuterJoin).HasColumnName("Outer_Join");
            entity.Property(e => e.PalletSize).HasMaxLength(10);
            entity.Property(e => e.PalletizationPath)
                .HasMaxLength(50)
                .HasColumnName("Palletization_Path");
            entity.Property(e => e.PartNo)
                .HasMaxLength(40)
                .HasColumnName("Part_No");
            entity.Property(e => e.Pc)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("PC");
            entity.Property(e => e.PdisStatus)
                .HasMaxLength(50)
                .HasColumnName("PDIS_Status");
            entity.Property(e => e.PicPallet).HasMaxLength(100);
            entity.Property(e => e.PiecePatch).HasColumnName("Piece_Patch");
            entity.Property(e => e.PieceSet).HasColumnName("Piece_Set");
            entity.Property(e => e.Plant)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.PltAxleHeight).HasColumnName("Plt_Axle_Height");
            entity.Property(e => e.PltBeam).HasColumnName("Plt_Beam");
            entity.Property(e => e.PltDoubleAxle).HasColumnName("Plt_Double_axle");
            entity.Property(e => e.PltFloorAbove).HasColumnName("Plt_Floor_Above");
            entity.Property(e => e.PltFloorUnder).HasColumnName("Plt_Floor_Under");
            entity.Property(e => e.PltLegDouble).HasColumnName("Plt_Leg_Double");
            entity.Property(e => e.PltLegSingle).HasColumnName("Plt_Leg_Single");
            entity.Property(e => e.PltSingleAxle).HasColumnName("Plt_Single_axle");
            entity.Property(e => e.PrintMasterPath)
                .HasMaxLength(100)
                .HasColumnName("PrintMaster_Path");
            entity.Property(e => e.PrintMethod)
                .HasMaxLength(50)
                .HasColumnName("Print_Method");
            entity.Property(e => e.PriorityFlag)
                .HasMaxLength(30)
                .HasColumnName("Priority_Flag");
            entity.Property(e => e.ProType)
                .HasMaxLength(60)
                .HasColumnName("Pro_Type");
            entity.Property(e => e.PsmId)
                .HasMaxLength(50)
                .HasColumnName("PSM_ID");
            entity.Property(e => e.PurTxt1)
                .HasMaxLength(40)
                .HasColumnName("Pur_Txt1");
            entity.Property(e => e.PurTxt2)
                .HasMaxLength(40)
                .HasColumnName("Pur_Txt2");
            entity.Property(e => e.PurTxt3)
                .HasMaxLength(40)
                .HasColumnName("Pur_Txt3");
            entity.Property(e => e.PurTxt4)
                .HasMaxLength(40)
                .HasColumnName("Pur_Txt4");
            entity.Property(e => e.RscStyle)
                .HasMaxLength(50)
                .HasColumnName("RSC_Style");
            entity.Property(e => e.SaleOrg)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("Sale_Org");
            entity.Property(e => e.SaleText1)
                .HasMaxLength(40)
                .HasColumnName("Sale_Text1");
            entity.Property(e => e.SaleText2)
                .HasMaxLength(40)
                .HasColumnName("Sale_Text2");
            entity.Property(e => e.SaleText3)
                .HasMaxLength(40)
                .HasColumnName("Sale_Text3");
            entity.Property(e => e.SaleText4)
                .HasMaxLength(40)
                .HasColumnName("Sale_Text4");
            entity.Property(e => e.SaleUom)
                .HasMaxLength(50)
                .HasColumnName("Sale_UOM");
            entity.Property(e => e.SapStatus).HasColumnName("SAP_Status");
            entity.Property(e => e.SboExternalNumber)
                .HasMaxLength(50)
                .HasColumnName("SBO_External_Number");
            entity.Property(e => e.Semi1Path)
                .HasMaxLength(100)
                .HasColumnName("Semi1_Path");
            entity.Property(e => e.Semi2Path)
                .HasMaxLength(100)
                .HasColumnName("Semi2_Path");
            entity.Property(e => e.Semi3Path)
                .HasMaxLength(100)
                .HasColumnName("Semi3_Path");
            entity.Property(e => e.SemiFilePdfPath)
                .HasMaxLength(100)
                .HasColumnName("SemiFilePdf_Path");
            entity.Property(e => e.SheetArea).HasColumnName("Sheet_Area");
            entity.Property(e => e.StatusFlag)
                .HasMaxLength(30)
                .HasColumnName("Status_Flag");
            entity.Property(e => e.TagBundle).HasMaxLength(500);
            entity.Property(e => e.TagPallet).HasMaxLength(500);
            entity.Property(e => e.TopSheetMaterial)
                .HasMaxLength(18)
                .HasColumnName("TopSheet_Material");
            entity.Property(e => e.TranStatus).HasColumnName("Tran_Status");
            entity.Property(e => e.UnUpgradBoard).HasColumnName("UnUpgrad_Board");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.User).HasMaxLength(50);
            entity.Property(e => e.WeightBox).HasColumnName("Weight_Box");
            entity.Property(e => e.WeightSh).HasColumnName("Weight_Sh");
        });

        modelBuilder.Entity<MoTemp>(entity =>
        {
            entity.ToTable("MO_Temp");

            entity.Property(e => e.Batch).HasMaxLength(10);
            entity.Property(e => e.Board).HasMaxLength(50);
            entity.Property(e => e.CutSheetLeng).HasMaxLength(10);
            entity.Property(e => e.CutSheetWid).HasMaxLength(10);
            entity.Property(e => e.DateTimeStamp).HasMaxLength(12);
            entity.Property(e => e.District).HasMaxLength(60);
            entity.Property(e => e.DueDate)
                .IsRequired()
                .HasMaxLength(6)
                .HasColumnName("Due_Date");
            entity.Property(e => e.Hig).HasMaxLength(10);
            entity.Property(e => e.ItemNote)
                .HasMaxLength(60)
                .HasColumnName("Item_Note");
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.MoStatus)
                .IsRequired()
                .HasMaxLength(1)
                .HasColumnName("MO_Status");
            entity.Property(e => e.Name).HasMaxLength(40);
            entity.Property(e => e.OrderItem)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.OrderQuant)
                .IsRequired()
                .HasMaxLength(15)
                .HasColumnName("Order_Quant");
            entity.Property(e => e.Plant).HasMaxLength(10);
            entity.Property(e => e.PoNo)
                .HasMaxLength(25)
                .HasColumnName("PO_No");
            entity.Property(e => e.SaleOrg)
                .HasMaxLength(10)
                .HasColumnName("Sale_Org");
            entity.Property(e => e.ScoreW1).HasMaxLength(10);
            entity.Property(e => e.ScoreW2).HasMaxLength(10);
            entity.Property(e => e.ScoreW3).HasMaxLength(10);
            entity.Property(e => e.ScoreW4).HasMaxLength(10);
            entity.Property(e => e.ScoreW5).HasMaxLength(10);
            entity.Property(e => e.ScoreW6).HasMaxLength(10);
            entity.Property(e => e.ShipTo)
                .HasMaxLength(12)
                .HasColumnName("Ship_to");
            entity.Property(e => e.SoldTo)
                .HasMaxLength(12)
                .HasColumnName("Sold_to");
            entity.Property(e => e.TargetQuant)
                .HasMaxLength(8)
                .HasColumnName("Target_Quant");
            entity.Property(e => e.ToleranceOver)
                .HasMaxLength(4)
                .HasColumnName("Tolerance_Over");
            entity.Property(e => e.ToleranceUnder)
                .HasMaxLength(4)
                .HasColumnName("Tolerance_Under");
        });

        modelBuilder.Entity<Pallet>(entity =>
        {
            entity.Property(e => e.PalletOwner).HasMaxLength(50);
            entity.Property(e => e.PalletPatterns).HasMaxLength(200);
            entity.Property(e => e.PalletType).HasMaxLength(50);
        });

        modelBuilder.Entity<PaperGrade>(entity =>
        {
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.Bsh)
                .HasMaxLength(5)
                .HasColumnName("BSH");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Grade).HasMaxLength(50);
            entity.Property(e => e.Kiwi)
                .HasMaxLength(50)
                .HasDefaultValue("")
                .HasColumnName("KIWI");
            entity.Property(e => e.Paper)
                .IsRequired()
                .HasMaxLength(5);
            entity.Property(e => e.PaperDes)
                .HasMaxLength(15)
                .HasColumnName("Paper_Des");
            entity.Property(e => e.PaperId).HasColumnName("Paper_Id");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<PaperGradeCodeMachine>(entity =>
        {
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Grade).HasMaxLength(50);
            entity.Property(e => e.GradeCodeMachine).HasMaxLength(50);
        });

        modelBuilder.Entity<PaperWidth>(entity =>
        {
            entity.HasIndex(e => new { e.FactoryCode, e.Width }, "NonClusteredIndex-20190514-182510").IsUnique();

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<PlantCostField>(entity =>
        {
            entity.Property(e => e.CostField).HasMaxLength(50);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
        });

        modelBuilder.Entity<PlantView>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Plant_View_1");

            entity.ToTable("Plant_View");

            entity.HasIndex(e => new { e.FactoryCode, e.MaterialNo, e.Plant }, "NonClusteredIndex-20190514-181727");

            entity.Property(e => e.EffectiveDate)
                .HasColumnType("datetime")
                .HasColumnName("Effective_Date");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.PdisStatus)
                .IsRequired()
                .HasMaxLength(1)
                .HasDefaultValue("C")
                .HasColumnName("PDIS_Status");
            entity.Property(e => e.Plant)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.PurchCode)
                .IsRequired()
                .HasMaxLength(5)
                .HasColumnName("Purch_Code");
            entity.Property(e => e.SapStatus).HasColumnName("SAP_Status");
            entity.Property(e => e.ShipBlk)
                .HasMaxLength(1)
                .HasColumnName("Ship_Blk");
            entity.Property(e => e.StdFc).HasColumnName("Std_FC");
            entity.Property(e => e.StdMovingCost).HasColumnName("Std_Moving_Cost");
            entity.Property(e => e.StdTotalCost).HasColumnName("Std_Total_Cost");
            entity.Property(e => e.StdVc).HasColumnName("Std_VC");
            entity.Property(e => e.TranStatus).HasColumnName("Tran_Status");
        });

        modelBuilder.Entity<PmtsConfig>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tbl_PMTsConfig");

            entity.ToTable("PMTsConfig");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.FactoryCode)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.FucName)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("Fuc_Name");
            entity.Property(e => e.FucValue)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("Fuc_Value");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<PpcBoiStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_BOI_STATUS");

            entity.ToTable("PPC_BOI_Status");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Status).HasMaxLength(50);
        });

        modelBuilder.Entity<PpcFscCode>(entity =>
        {
            entity.ToTable("PPC_FSC_CODE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FscCode)
                .HasMaxLength(50)
                .HasColumnName("FSC_CODE");
            entity.Property(e => e.FscProductType)
                .HasMaxLength(100)
                .HasColumnName("FSC_PRODUCT_TYPE");
            entity.Property(e => e.FscSalesText)
                .HasMaxLength(40)
                .HasColumnName("FSC_SALES_TEXT");
        });

        modelBuilder.Entity<PpcFscFgCode>(entity =>
        {
            entity.ToTable("PPC_FSC_FG_CODE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FscFgCode)
                .HasMaxLength(50)
                .HasColumnName("FSC_FG_CODE");
            entity.Property(e => e.FscFgDescription)
                .HasMaxLength(100)
                .HasColumnName("FSC_FG_DESCRIPTION");
            entity.Property(e => e.FscFgPrefix)
                .HasMaxLength(10)
                .HasColumnName("FSC_FG_PREFIX");
        });

        modelBuilder.Entity<PpcMasterRpac>(entity =>
        {
            entity.ToTable("PPC_Master_Rpac");

            entity.Property(e => e.DimensionCode).HasMaxLength(20);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.RpacCode).HasMaxLength(50);
            entity.Property(e => e.RpacName).HasMaxLength(50);
        });

        modelBuilder.Entity<PpcProductionPrintingProcess>(entity =>
        {
            entity.ToTable("PPC_Production_Printing_Process");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PaperWaste).HasColumnName("Paper_Waste");
            entity.Property(e => e.PercentWaste)
                .HasColumnType("decimal(18, 4)")
                .HasColumnName("Percent_Waste");
            entity.Property(e => e.PlanCode)
                .HasMaxLength(10)
                .HasColumnName("Plan_Code");
            entity.Property(e => e.Plant).HasMaxLength(10);
            entity.Property(e => e.QuantityStart).HasColumnName("Quantity_Start");
            entity.Property(e => e.QuantityTo).HasColumnName("Quantity_TO");
        });

        modelBuilder.Entity<PpcProductionProcess>(entity =>
        {
            entity.ToTable("PPC_Production_Process");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PaperWaste).HasColumnName("Paper_Waste");
            entity.Property(e => e.PercentWaste)
                .HasColumnType("decimal(18, 4)")
                .HasColumnName("Percent_Waste");
            entity.Property(e => e.PlanCode)
                .HasMaxLength(10)
                .HasColumnName("Plan_Code");
            entity.Property(e => e.Plant).HasMaxLength(10);
            entity.Property(e => e.QuantityStart).HasColumnName("Quantity_Start");
            entity.Property(e => e.QuantityTo).HasColumnName("Quantity_TO");
            entity.Property(e => e.WorkType).HasColumnName("Work_Type");
        });

        modelBuilder.Entity<PpcRawMaterialMaster>(entity =>
        {
            entity.ToTable("PPC_Raw_Material_Master");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DateOfCreation)
                .HasColumnType("datetime")
                .HasColumnName("DATE_OF_Creation");
            entity.Property(e => e.MaterialDescription)
                .HasMaxLength(1000)
                .HasColumnName("Material_Description");
            entity.Property(e => e.MaterialGroup)
                .HasMaxLength(100)
                .HasColumnName("Material_Group");
            entity.Property(e => e.MaterialNumber)
                .HasMaxLength(100)
                .HasColumnName("Material_Number");
            entity.Property(e => e.MaterialType).HasColumnName("Material_Type");
            entity.Property(e => e.NetWeight)
                .HasColumnType("decimal(18, 5)")
                .HasColumnName("NET_Weight");
            entity.Property(e => e.OldMaterialNumber)
                .HasMaxLength(100)
                .HasColumnName("OLD_Material_Number");
            entity.Property(e => e.Plant).HasMaxLength(100);
            entity.Property(e => e.Uom)
                .HasMaxLength(100)
                .HasColumnName("UOM");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateDate)
                .HasColumnType("datetime")
                .HasColumnName("UPDATE_DATE");
        });

        modelBuilder.Entity<PpcRawMaterialProductionBom>(entity =>
        {
            entity.ToTable("PPC_Raw_Material_Production_BOM");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BomAmount)
                .HasColumnType("decimal(18, 5)")
                .HasColumnName("BOM_Amount");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(50)
                .HasColumnName("Create_By");
            entity.Property(e => e.CreateDate)
                .HasColumnType("datetime")
                .HasColumnName("Create_Date");
            entity.Property(e => e.CutSize).HasColumnName("CUT_SIZE");
            entity.Property(e => e.FgMaterial)
                .HasMaxLength(50)
                .HasColumnName("FG_Material");
            entity.Property(e => e.Lay).HasColumnName("LAY");
            entity.Property(e => e.Length).HasColumnType("decimal(18, 5)");
            entity.Property(e => e.MaterialDescription)
                .HasMaxLength(1000)
                .HasColumnName("Material_Description");
            entity.Property(e => e.MaterialGroup)
                .HasMaxLength(100)
                .HasColumnName("Material_Group");
            entity.Property(e => e.MaterialNumber)
                .HasMaxLength(100)
                .HasColumnName("Material_Number");
            entity.Property(e => e.MaterialType).HasColumnName("Material_Type");
            entity.Property(e => e.NetWeight)
                .HasColumnType("decimal(18, 5)")
                .HasColumnName("NET_Weight");
            entity.Property(e => e.OldMaterialNumber)
                .HasMaxLength(100)
                .HasColumnName("OLD_Material_Number");
            entity.Property(e => e.Plant).HasMaxLength(100);
            entity.Property(e => e.SizeUom)
                .HasMaxLength(100)
                .HasColumnName("SIZE_UOM");
            entity.Property(e => e.Uom)
                .HasMaxLength(100)
                .HasColumnName("UOM");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(50)
                .HasColumnName("Update_By");
            entity.Property(e => e.UpdateDate)
                .HasColumnType("datetime")
                .HasColumnName("Update_Date");
            entity.Property(e => e.Width).HasColumnType("decimal(18, 5)");
        });

        modelBuilder.Entity<PpcWorkType>(entity =>
        {
            entity.ToTable("PPC_WORK_TYPE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.WorkType)
                .HasMaxLength(50)
                .HasColumnName("WORK_TYPE");
        });

        modelBuilder.Entity<PresaleChangeProduct>(entity =>
        {
            entity.Property(e => e.Description).HasMaxLength(40);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.HighGroup)
                .HasMaxLength(2)
                .HasColumnName("High_Group");
            entity.Property(e => e.HighValue)
                .HasMaxLength(4)
                .HasColumnName("High_Value");
            entity.Property(e => e.MaterialNo)
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.PieceSet).HasColumnName("Piece_Set");
            entity.Property(e => e.PrintMethod)
                .HasMaxLength(50)
                .HasColumnName("Print_Method");
            entity.Property(e => e.PsmId)
                .HasMaxLength(50)
                .HasColumnName("PSM_ID");
            entity.Property(e => e.SaleText1)
                .HasMaxLength(40)
                .HasColumnName("Sale_Text1");
            entity.Property(e => e.SaleText2)
                .HasMaxLength(40)
                .HasColumnName("Sale_Text2");
            entity.Property(e => e.SaleText3)
                .HasMaxLength(40)
                .HasColumnName("Sale_Text3");
            entity.Property(e => e.SaleText4)
                .HasMaxLength(40)
                .HasColumnName("Sale_Text4");
            entity.Property(e => e.Status).HasMaxLength(1);
        });

        modelBuilder.Entity<PresaleChangeRouting>(entity =>
        {
            entity.Property(e => e.Color1).HasMaxLength(20);
            entity.Property(e => e.Color2).HasMaxLength(20);
            entity.Property(e => e.Color3).HasMaxLength(20);
            entity.Property(e => e.Color4).HasMaxLength(20);
            entity.Property(e => e.Color5).HasMaxLength(20);
            entity.Property(e => e.Color6).HasMaxLength(20);
            entity.Property(e => e.Color7).HasMaxLength(20);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Machine).HasMaxLength(50);
            entity.Property(e => e.MatCode)
                .HasMaxLength(50)
                .HasColumnName("Mat_Code");
            entity.Property(e => e.MaterialNo)
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.PlanCode)
                .HasMaxLength(10)
                .HasColumnName("Plan_Code");
            entity.Property(e => e.PsmId)
                .HasMaxLength(50)
                .HasColumnName("PSM_ID");
            entity.Property(e => e.SeqNo).HasColumnName("Seq_No");
            entity.Property(e => e.Shade1).HasMaxLength(10);
            entity.Property(e => e.Shade2).HasMaxLength(10);
            entity.Property(e => e.Shade3).HasMaxLength(10);
            entity.Property(e => e.Shade4).HasMaxLength(10);
            entity.Property(e => e.Shade5).HasMaxLength(10);
            entity.Property(e => e.Shade6).HasMaxLength(10);
            entity.Property(e => e.Shade7).HasMaxLength(10);
        });

        modelBuilder.Entity<PricingMaster>(entity =>
        {
            entity.Property(e => e.ConditionNumber)
                .HasMaxLength(10)
                .HasColumnName("condition number");
            entity.Property(e => e.ConditionPricingUnit).HasColumnName("condition pricing unit");
            entity.Property(e => e.ConditionType)
                .HasMaxLength(4)
                .HasColumnName("condition type");
            entity.Property(e => e.CurrencyKey)
                .HasMaxLength(5)
                .HasColumnName("currency key");
            entity.Property(e => e.DataFrom).HasMaxLength(20);
            entity.Property(e => e.DistributionChannel)
                .IsRequired()
                .HasMaxLength(2)
                .HasColumnName("distribution channel");
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("material no");
            entity.Property(e => e.Rate).HasColumnName("rate");
            entity.Property(e => e.SalesOrg)
                .IsRequired()
                .HasMaxLength(4)
                .HasColumnName("sales org");
            entity.Property(e => e.Uom)
                .HasMaxLength(3)
                .HasColumnName("UOM");
            entity.Property(e => e.ValidityEndDate)
                .HasColumnType("datetime")
                .HasColumnName("validity end date");
            entity.Property(e => e.ValidityStartFrom)
                .HasColumnType("datetime")
                .HasColumnName("validity start from");
        });

        modelBuilder.Entity<PricingMasterScale>(entity =>
        {
            entity.ToTable("PricingMaster_Scale");

            entity.Property(e => e.ConditionNumber)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("condition number");
            entity.Property(e => e.ConditionPricingUnit).HasColumnName("condition pricing unit");
            entity.Property(e => e.ConditionType)
                .HasMaxLength(4)
                .HasColumnName("condition type");
            entity.Property(e => e.CurrencyKey)
                .HasMaxLength(5)
                .HasColumnName("currency key");
            entity.Property(e => e.DataFrom).HasMaxLength(20);
            entity.Property(e => e.DistributionChannel)
                .IsRequired()
                .HasMaxLength(2)
                .HasColumnName("distribution channel");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("material no");
            entity.Property(e => e.Rate).HasColumnName("rate");
            entity.Property(e => e.SalesOrg)
                .IsRequired()
                .HasMaxLength(4)
                .HasColumnName("sales org");
            entity.Property(e => e.ScaleQuantity).HasColumnName("scaleQuantity");
            entity.Property(e => e.Uom)
                .HasMaxLength(3)
                .HasColumnName("UOM");
            entity.Property(e => e.ValidityEndDate)
                .HasColumnType("datetime")
                .HasColumnName("validity end date");
            entity.Property(e => e.ValidityStartFrom)
                .HasColumnType("datetime")
                .HasColumnName("validity start from");
        });

        modelBuilder.Entity<PrintMethod>(entity =>
        {
            entity.ToTable("Print_Method");

            entity.Property(e => e.Code).HasMaxLength(12);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Method).HasMaxLength(220);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<ProcessCost>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tbl_ProcessCostx");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<ProductCatalogConfig>(entity =>
        {
            entity.Property(e => e.ColumnName).HasMaxLength(100);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.UserName).HasMaxLength(50);
        });

        modelBuilder.Entity<ProductGroup>(entity =>
        {
            entity.ToTable("Product_Group");

            entity.HasIndex(e => e.Code, "NonClusteredIndex-20190530-163425").IsUnique();

            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(200);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<ProductType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tbl_ProductTypex");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Dc)
                .HasMaxLength(100)
                .HasColumnName("DC");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.FlexoOrderBy).HasMaxLength(100);
            entity.Property(e => e.FormGroup).HasMaxLength(20);
            entity.Property(e => e.GroupProduct).HasMaxLength(50);
            entity.Property(e => e.HierarchyLv2).HasMaxLength(10);
            entity.Property(e => e.Name).HasMaxLength(60);
            entity.Property(e => e.UnitDesc)
                .HasMaxLength(3)
                .HasColumnName("Unit_Desc");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<ProductionType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tbl_ProductionUnit");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Desctiption).HasMaxLength(100);
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<QaAlert>(entity =>
        {
            entity.ToTable("QA_Alert");

            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Flag).HasDefaultValue(true);
            entity.Property(e => e.MachineCode)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("Machine_Code");
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("Material_No");
            entity.Property(e => e.SalesOrg)
                .IsRequired()
                .HasMaxLength(4)
                .HasColumnName("Sales_Org");
            entity.Property(e => e.WarnId)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("WarnID");
            entity.Property(e => e.WarnMessage1).HasMaxLength(150);
            entity.Property(e => e.WarnMessage2).HasMaxLength(50);
        });

        modelBuilder.Entity<QaAlertTemp>(entity =>
        {
            entity.ToTable("QA_Alert_Temp");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Flag).HasDefaultValue(true);
            entity.Property(e => e.MachineCode)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("Machine_Code");
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("Material_No");
            entity.Property(e => e.SalesOrg)
                .IsRequired()
                .HasMaxLength(4)
                .HasColumnName("Sales_Org");
            entity.Property(e => e.WarnId)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("WarnID");
            entity.Property(e => e.WarnMessage1).HasMaxLength(150);
            entity.Property(e => e.WarnMessage2).HasMaxLength(50);
        });

        modelBuilder.Entity<QaItems>(entity =>
        {
            entity.ToTable("QA_Items");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.TestName).HasMaxLength(50);
            entity.Property(e => e.Unit).HasMaxLength(20);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<QualitySpec>(entity =>
        {
            entity.Property(e => e.FactoryCode)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Unit).HasMaxLength(20);
            entity.Property(e => e.Value).HasColumnType("decimal(18, 2)");
        });

        modelBuilder.Entity<Remark>(entity =>
        {
            entity.HasIndex(e => new { e.Pc, e.FactoryCode }, "NonClusteredIndex-20200206-145420").IsUnique();

            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.LastUpdate).HasColumnType("datetime");
            entity.Property(e => e.NonMoveMonth).HasColumnType("datetime");
            entity.Property(e => e.Pc)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("PC");
            entity.Property(e => e.Remark1)
                .HasMaxLength(500)
                .HasColumnName("Remark");
            entity.Property(e => e.StockFg).HasColumnName("StockFG");
            entity.Property(e => e.StockQa).HasColumnName("StockQA");
            entity.Property(e => e.StockWip).HasColumnName("StockWIP");
            entity.Property(e => e.UpdateBy).HasMaxLength(20);
        });

        modelBuilder.Entity<Routing>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Routing_1");

            entity.HasIndex(e => new { e.FactoryCode, e.SeqNo, e.MaterialNo, e.PdisStatus }, "NonClusteredIndex-20190514-181419").IsUnique();

            entity.HasIndex(e => new { e.FactoryCode, e.MaterialNo }, "NonClusteredIndex-20190628-085734");

            entity.Property(e => e.Alternative1).HasMaxLength(50);
            entity.Property(e => e.Alternative2).HasMaxLength(50);
            entity.Property(e => e.Alternative3).HasMaxLength(50);
            entity.Property(e => e.Alternative4).HasMaxLength(50);
            entity.Property(e => e.Alternative5).HasMaxLength(50);
            entity.Property(e => e.Alternative6).HasMaxLength(50);
            entity.Property(e => e.Alternative7).HasMaxLength(50);
            entity.Property(e => e.Alternative8).HasMaxLength(50);
            entity.Property(e => e.BlockNo)
                .HasMaxLength(50)
                .HasColumnName("Block_No");
            entity.Property(e => e.BlockNo2).HasMaxLength(50);
            entity.Property(e => e.BlockNo3).HasMaxLength(50);
            entity.Property(e => e.BlockNo4).HasMaxLength(50);
            entity.Property(e => e.BlockNo5).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant2).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant3).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant4).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant5).HasMaxLength(50);
            entity.Property(e => e.Color1).HasMaxLength(20);
            entity.Property(e => e.Color10).HasMaxLength(20);
            entity.Property(e => e.Color2).HasMaxLength(20);
            entity.Property(e => e.Color3).HasMaxLength(20);
            entity.Property(e => e.Color4).HasMaxLength(20);
            entity.Property(e => e.Color5).HasMaxLength(20);
            entity.Property(e => e.Color6).HasMaxLength(20);
            entity.Property(e => e.Color7).HasMaxLength(20);
            entity.Property(e => e.Color8).HasMaxLength(20);
            entity.Property(e => e.Color9).HasMaxLength(20);
            entity.Property(e => e.ColorArea1).HasColumnName("Color_Area1");
            entity.Property(e => e.ColorArea10).HasColumnName("Color_Area10");
            entity.Property(e => e.ColorArea2).HasColumnName("Color_Area2");
            entity.Property(e => e.ColorArea3).HasColumnName("Color_Area3");
            entity.Property(e => e.ColorArea4).HasColumnName("Color_Area4");
            entity.Property(e => e.ColorArea5).HasColumnName("Color_Area5");
            entity.Property(e => e.ColorArea6).HasColumnName("Color_Area6");
            entity.Property(e => e.ColorArea7).HasColumnName("Color_Area7");
            entity.Property(e => e.ColorArea8).HasColumnName("Color_Area8");
            entity.Property(e => e.ColorArea9).HasColumnName("Color_Area9");
            entity.Property(e => e.ColorCount).HasColumnName("Color_count");
            entity.Property(e => e.ColourCount).HasColumnName("Colour_Count");
            entity.Property(e => e.ControllerCode).HasMaxLength(10);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CustBarcodeNo).HasMaxLength(20);
            entity.Property(e => e.CutNo).HasColumnName("Cut_No");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.JoinMatNo)
                .HasMaxLength(18)
                .HasColumnName("Join_Mat_no");
            entity.Property(e => e.Machine).HasMaxLength(50);
            entity.Property(e => e.MatCode)
                .HasMaxLength(50)
                .HasColumnName("Mat_Code");
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.McMove).HasColumnName("MC_Move");
            entity.Property(e => e.MylaNo)
                .HasMaxLength(50)
                .HasColumnName("Myla_No");
            entity.Property(e => e.MylaNo2).HasMaxLength(50);
            entity.Property(e => e.MylaNo3).HasMaxLength(50);
            entity.Property(e => e.MylaNo4).HasMaxLength(50);
            entity.Property(e => e.MylaNo5).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant2).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant3).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant4).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant5).HasMaxLength(50);
            entity.Property(e => e.MylaSize).HasMaxLength(50);
            entity.Property(e => e.NoOpenIn).HasColumnName("No_Open_in");
            entity.Property(e => e.NoOpenOut).HasColumnName("No_Open_out");
            entity.Property(e => e.NoneBlk).HasColumnName("None_Blk");
            entity.Property(e => e.PaperWidth).HasColumnName("Paper_Width");
            entity.Property(e => e.PdisStatus)
                .HasMaxLength(1)
                .HasColumnName("PDIS_Status");
            entity.Property(e => e.PlanCode)
                .HasMaxLength(10)
                .HasColumnName("Plan_Code");
            entity.Property(e => e.PlanProgramCode).HasMaxLength(10);
            entity.Property(e => e.Plant).HasMaxLength(10);
            entity.Property(e => e.PlateNo)
                .HasMaxLength(50)
                .HasColumnName("Plate_No");
            entity.Property(e => e.PlateNo2).HasMaxLength(50);
            entity.Property(e => e.PlateNo3).HasMaxLength(50);
            entity.Property(e => e.PlateNo4).HasMaxLength(50);
            entity.Property(e => e.PlateNo5).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant2).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant3).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant4).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant5).HasMaxLength(50);
            entity.Property(e => e.PostTm).HasColumnName("Post_tm");
            entity.Property(e => e.PrepareTm).HasColumnName("Prepare_tm");
            entity.Property(e => e.RemarkInprocess)
                .HasMaxLength(300)
                .HasColumnName("Remark_Inprocess");
            entity.Property(e => e.RotateIn).HasColumnName("Rotate_In");
            entity.Property(e => e.RotateOut).HasColumnName("Rotate_Out");
            entity.Property(e => e.RunWaste).HasColumnName("Run_waste");
            entity.Property(e => e.SapStatus).HasColumnName("SAP_Status");
            entity.Property(e => e.ScoreGap).HasColumnName("Score_Gap");
            entity.Property(e => e.ScoreType)
                .HasMaxLength(10)
                .HasColumnName("Score_type");
            entity.Property(e => e.SemiBlk).HasColumnName("Semi_Blk");
            entity.Property(e => e.SeparatMatNo)
                .HasMaxLength(18)
                .HasColumnName("Separat_Mat_no");
            entity.Property(e => e.SeqNo).HasColumnName("Seq_No");
            entity.Property(e => e.SetupTm).HasColumnName("Setup_tm");
            entity.Property(e => e.SetupWaste).HasColumnName("Setup_waste");
            entity.Property(e => e.Shade1).HasMaxLength(10);
            entity.Property(e => e.Shade10).HasMaxLength(10);
            entity.Property(e => e.Shade2).HasMaxLength(10);
            entity.Property(e => e.Shade3).HasMaxLength(10);
            entity.Property(e => e.Shade4).HasMaxLength(10);
            entity.Property(e => e.Shade5).HasMaxLength(10);
            entity.Property(e => e.Shade6).HasMaxLength(10);
            entity.Property(e => e.Shade7).HasMaxLength(10);
            entity.Property(e => e.Shade8).HasMaxLength(10);
            entity.Property(e => e.Shade9).HasMaxLength(10);
            entity.Property(e => e.SheetInLeg).HasColumnName("Sheet_in_Leg");
            entity.Property(e => e.SheetInWid).HasColumnName("Sheet_in_Wid");
            entity.Property(e => e.SheetOutLeg).HasColumnName("Sheet_out_Leg");
            entity.Property(e => e.SheetOutWid).HasColumnName("Sheet_out_Wid");
            entity.Property(e => e.ShipBlk).HasColumnName("Ship_Blk");
            entity.Property(e => e.StackHeight).HasColumnName("Stack_Height");
            entity.Property(e => e.StanBlk).HasColumnName("Stan_Blk");
            entity.Property(e => e.StdProcess).HasColumnName("Std_Process");
            entity.Property(e => e.TearTapeDistance).HasMaxLength(100);
            entity.Property(e => e.TranStatus).HasColumnName("Tran_Status");
            entity.Property(e => e.UnUpgradBoard).HasColumnName("UnUpgrad_Board");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.WasteLeg).HasColumnName("Waste_Leg");
            entity.Property(e => e.WasteWid).HasColumnName("Waste_Wid");
            entity.Property(e => e.WeightIn).HasColumnName("Weight_in");
            entity.Property(e => e.WeightOut).HasColumnName("Weight_out");
        });

        modelBuilder.Entity<Routing2pc>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Routing2pc_1");

            entity.Property(e => e.Alternative1).HasMaxLength(50);
            entity.Property(e => e.Alternative2).HasMaxLength(50);
            entity.Property(e => e.Alternative3).HasMaxLength(50);
            entity.Property(e => e.Alternative4).HasMaxLength(50);
            entity.Property(e => e.Alternative5).HasMaxLength(50);
            entity.Property(e => e.Alternative6).HasMaxLength(50);
            entity.Property(e => e.Alternative7).HasMaxLength(50);
            entity.Property(e => e.Alternative8).HasMaxLength(50);
            entity.Property(e => e.BlockNo)
                .HasMaxLength(50)
                .HasColumnName("Block_No");
            entity.Property(e => e.BlockNo2).HasMaxLength(50);
            entity.Property(e => e.BlockNo3).HasMaxLength(50);
            entity.Property(e => e.BlockNo4).HasMaxLength(50);
            entity.Property(e => e.BlockNo5).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant2).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant3).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant4).HasMaxLength(50);
            entity.Property(e => e.BlockNoPlant5).HasMaxLength(50);
            entity.Property(e => e.Color1).HasMaxLength(20);
            entity.Property(e => e.Color10).HasMaxLength(20);
            entity.Property(e => e.Color2).HasMaxLength(20);
            entity.Property(e => e.Color3).HasMaxLength(20);
            entity.Property(e => e.Color4).HasMaxLength(20);
            entity.Property(e => e.Color5).HasMaxLength(20);
            entity.Property(e => e.Color6).HasMaxLength(20);
            entity.Property(e => e.Color7).HasMaxLength(20);
            entity.Property(e => e.Color8).HasMaxLength(20);
            entity.Property(e => e.Color9).HasMaxLength(20);
            entity.Property(e => e.ColorArea1).HasColumnName("Color_Area1");
            entity.Property(e => e.ColorArea10).HasColumnName("Color_Area10");
            entity.Property(e => e.ColorArea2).HasColumnName("Color_Area2");
            entity.Property(e => e.ColorArea3).HasColumnName("Color_Area3");
            entity.Property(e => e.ColorArea4).HasColumnName("Color_Area4");
            entity.Property(e => e.ColorArea5).HasColumnName("Color_Area5");
            entity.Property(e => e.ColorArea6).HasColumnName("Color_Area6");
            entity.Property(e => e.ColorArea7).HasColumnName("Color_Area7");
            entity.Property(e => e.ColorArea8).HasColumnName("Color_Area8");
            entity.Property(e => e.ColorArea9).HasColumnName("Color_Area9");
            entity.Property(e => e.ColorCount).HasColumnName("Color_count");
            entity.Property(e => e.ColourCount).HasColumnName("Colour_Count");
            entity.Property(e => e.ControllerCode).HasMaxLength(10);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CustBarcodeNo).HasMaxLength(20);
            entity.Property(e => e.CutNo).HasColumnName("Cut_No");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.JoinMatNo)
                .HasMaxLength(18)
                .HasColumnName("Join_Mat_no");
            entity.Property(e => e.Machine).HasMaxLength(50);
            entity.Property(e => e.MatCode)
                .HasMaxLength(50)
                .HasColumnName("Mat_Code");
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.McMove).HasColumnName("MC_Move");
            entity.Property(e => e.MylaNo)
                .HasMaxLength(50)
                .HasColumnName("Myla_No");
            entity.Property(e => e.MylaNo2).HasMaxLength(50);
            entity.Property(e => e.MylaNo3).HasMaxLength(50);
            entity.Property(e => e.MylaNo4).HasMaxLength(50);
            entity.Property(e => e.MylaNo5).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant2).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant3).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant4).HasMaxLength(50);
            entity.Property(e => e.MylaNoPlant5).HasMaxLength(50);
            entity.Property(e => e.MylaSize).HasMaxLength(50);
            entity.Property(e => e.NoOpenIn).HasColumnName("No_Open_in");
            entity.Property(e => e.NoOpenOut).HasColumnName("No_Open_out");
            entity.Property(e => e.NoneBlk).HasColumnName("None_Blk");
            entity.Property(e => e.PaperWidth).HasColumnName("Paper_Width");
            entity.Property(e => e.PdisStatus)
                .HasMaxLength(1)
                .HasColumnName("PDIS_Status");
            entity.Property(e => e.PlanCode)
                .HasMaxLength(10)
                .HasColumnName("Plan_Code");
            entity.Property(e => e.PlanProgramCode).HasMaxLength(10);
            entity.Property(e => e.Plant).HasMaxLength(10);
            entity.Property(e => e.PlateNo)
                .HasMaxLength(50)
                .HasColumnName("Plate_No");
            entity.Property(e => e.PlateNo2).HasMaxLength(50);
            entity.Property(e => e.PlateNo3).HasMaxLength(50);
            entity.Property(e => e.PlateNo4).HasMaxLength(50);
            entity.Property(e => e.PlateNo5).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant2).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant3).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant4).HasMaxLength(50);
            entity.Property(e => e.PlateNoPlant5).HasMaxLength(50);
            entity.Property(e => e.PostTm).HasColumnName("Post_tm");
            entity.Property(e => e.PrepareTm).HasColumnName("Prepare_tm");
            entity.Property(e => e.RemarkInprocess)
                .HasMaxLength(300)
                .HasColumnName("Remark_Inprocess");
            entity.Property(e => e.RotateIn).HasColumnName("Rotate_In");
            entity.Property(e => e.RotateOut).HasColumnName("Rotate_Out");
            entity.Property(e => e.RunWaste).HasColumnName("Run_waste");
            entity.Property(e => e.SapStatus).HasColumnName("SAP_Status");
            entity.Property(e => e.ScoreGap).HasColumnName("Score_Gap");
            entity.Property(e => e.ScoreType)
                .HasMaxLength(10)
                .HasColumnName("Score_type");
            entity.Property(e => e.SemiBlk).HasColumnName("Semi_Blk");
            entity.Property(e => e.SeparatMatNo)
                .HasMaxLength(18)
                .HasColumnName("Separat_Mat_no");
            entity.Property(e => e.SeqNo).HasColumnName("Seq_No");
            entity.Property(e => e.SetupTm).HasColumnName("Setup_tm");
            entity.Property(e => e.SetupWaste).HasColumnName("Setup_waste");
            entity.Property(e => e.Shade1).HasMaxLength(10);
            entity.Property(e => e.Shade10).HasMaxLength(10);
            entity.Property(e => e.Shade2).HasMaxLength(10);
            entity.Property(e => e.Shade3).HasMaxLength(10);
            entity.Property(e => e.Shade4).HasMaxLength(10);
            entity.Property(e => e.Shade5).HasMaxLength(10);
            entity.Property(e => e.Shade6).HasMaxLength(10);
            entity.Property(e => e.Shade7).HasMaxLength(10);
            entity.Property(e => e.Shade8).HasMaxLength(10);
            entity.Property(e => e.Shade9).HasMaxLength(10);
            entity.Property(e => e.SheetInLeg).HasColumnName("Sheet_in_Leg");
            entity.Property(e => e.SheetInWid).HasColumnName("Sheet_in_Wid");
            entity.Property(e => e.SheetOutLeg).HasColumnName("Sheet_out_Leg");
            entity.Property(e => e.SheetOutWid).HasColumnName("Sheet_out_Wid");
            entity.Property(e => e.ShipBlk).HasColumnName("Ship_Blk");
            entity.Property(e => e.StackHeight).HasColumnName("Stack_Height");
            entity.Property(e => e.StanBlk).HasColumnName("Stan_Blk");
            entity.Property(e => e.StdProcess).HasColumnName("Std_Process");
            entity.Property(e => e.TearTapeDistance).HasMaxLength(100);
            entity.Property(e => e.TranStatus).HasColumnName("Tran_Status");
            entity.Property(e => e.UnUpgradBoard).HasColumnName("UnUpgrad_Board");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.WasteLeg).HasColumnName("Waste_Leg");
            entity.Property(e => e.WasteWid).HasColumnName("Waste_Wid");
            entity.Property(e => e.WeightIn).HasColumnName("Weight_in");
            entity.Property(e => e.WeightOut).HasColumnName("Weight_out");
        });

        modelBuilder.Entity<RunningNo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Running_No_1");

            entity.ToTable("Running_No");

            entity.HasIndex(e => new { e.GroupId, e.FactoryCode }, "NonClusteredIndex-20200109-112652");

            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.Company)
                .IsRequired()
                .HasMaxLength(4);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.DateStamp).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.EndNo).HasColumnName("End_No");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Fix)
                .IsRequired()
                .HasMaxLength(6);
            entity.Property(e => e.GroupId)
                .IsRequired()
                .HasMaxLength(2)
                .HasColumnName("Group_ID");
            entity.Property(e => e.Holder).HasMaxLength(20);
            entity.Property(e => e.Plant)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.ScopeNo).HasColumnName("Scope_No");
            entity.Property(e => e.StartNo).HasColumnName("Start_No");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<SalesView>(entity =>
        {
            entity.ToTable("Sales_View");

            entity.HasIndex(e => new { e.FactoryCode, e.MaterialNo, e.Channel }, "NonClusteredIndex-20190514-181141");

            entity.Property(e => e.ChangeDate)
                .HasColumnType("datetime")
                .HasColumnName("Change_Date");
            entity.Property(e => e.CustCode)
                .HasMaxLength(10)
                .HasColumnName("Cust_Code");
            entity.Property(e => e.DevPlant)
                .HasMaxLength(10)
                .HasColumnName("Dev_Plant");
            entity.Property(e => e.Effective).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("Material_No");
            entity.Property(e => e.MinQty)
                .HasDefaultValue(0)
                .HasColumnName("Min_Qty");
            entity.Property(e => e.NewPrice).HasColumnName("New_Price");
            entity.Property(e => e.OldPrice).HasColumnName("Old_Price");
            entity.Property(e => e.OrderType)
                .HasMaxLength(7)
                .HasColumnName("Order_Type");
            entity.Property(e => e.PdisStatus)
                .IsRequired()
                .HasMaxLength(1)
                .HasColumnName("PDIS_Status");
            entity.Property(e => e.PriceAdj).HasColumnName("Price_Adj");
            entity.Property(e => e.SaleOrg)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("Sale_Org");
            entity.Property(e => e.SaleUnitPrice).HasColumnName("Sale_Unit_Price");
            entity.Property(e => e.SapStatus).HasColumnName("SAP_Status");
            entity.Property(e => e.TranStatus).HasColumnName("Tran_Status");
        });

        modelBuilder.Entity<SbRouting>(entity =>
        {
            entity.ToTable("SB_Routing");

            entity.Property(e => e.Alternative1)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Alternative2)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Alternative3).HasMaxLength(200);
            entity.Property(e => e.Alternative4).HasMaxLength(200);
            entity.Property(e => e.Alternative5).HasMaxLength(200);
            entity.Property(e => e.Alternative6).HasMaxLength(200);
            entity.Property(e => e.Alternative7).HasMaxLength(200);
            entity.Property(e => e.Alternative8).HasMaxLength(200);
            entity.Property(e => e.BlockNo)
                .HasMaxLength(200)
                .HasColumnName("Block_No");
            entity.Property(e => e.Color1).HasMaxLength(80);
            entity.Property(e => e.Color2).HasMaxLength(80);
            entity.Property(e => e.Color3).HasMaxLength(80);
            entity.Property(e => e.Color4).HasMaxLength(80);
            entity.Property(e => e.Color5).HasMaxLength(80);
            entity.Property(e => e.Color6).HasMaxLength(80);
            entity.Property(e => e.Color7).HasMaxLength(80);
            entity.Property(e => e.ColorArea1).HasColumnName("Color_Area1");
            entity.Property(e => e.ColorArea2).HasColumnName("Color_Area2");
            entity.Property(e => e.ColorArea3).HasColumnName("Color_Area3");
            entity.Property(e => e.ColorArea4).HasColumnName("Color_Area4");
            entity.Property(e => e.ColorArea5).HasColumnName("Color_Area5");
            entity.Property(e => e.ColorArea6).HasColumnName("Color_Area6");
            entity.Property(e => e.ColorArea7).HasColumnName("Color_Area7");
            entity.Property(e => e.ColorCount).HasColumnName("Color_count");
            entity.Property(e => e.ColourCount).HasColumnName("Colour_Count");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CutNo).HasColumnName("Cut_No");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.JoinMatNo)
                .HasMaxLength(72)
                .HasColumnName("Join_Mat_no");
            entity.Property(e => e.Machine).HasMaxLength(200);
            entity.Property(e => e.MatCode)
                .HasMaxLength(40)
                .HasColumnName("Mat_Code");
            entity.Property(e => e.McMove).HasColumnName("MC_Move");
            entity.Property(e => e.MylaNo)
                .HasMaxLength(200)
                .HasColumnName("Myla_No");
            entity.Property(e => e.NoOpenIn).HasColumnName("No_Open_in");
            entity.Property(e => e.NoOpenOut).HasColumnName("No_Open_out");
            entity.Property(e => e.NoneBlk).HasColumnName("None_Blk");
            entity.Property(e => e.PaperWidth).HasColumnName("Paper_Width");
            entity.Property(e => e.PdisStatus)
                .HasMaxLength(5)
                .HasColumnName("PDIS_Status");
            entity.Property(e => e.PlanCode)
                .HasMaxLength(40)
                .HasColumnName("Plan_Code");
            entity.Property(e => e.Plant).HasMaxLength(20);
            entity.Property(e => e.PlateNo)
                .HasMaxLength(200)
                .HasColumnName("Plate_No");
            entity.Property(e => e.PostTm).HasColumnName("Post_tm");
            entity.Property(e => e.PrepareTm).HasColumnName("Prepare_tm");
            entity.Property(e => e.RemarkInprocess)
                .HasMaxLength(1020)
                .HasColumnName("Remark_Inprocess");
            entity.Property(e => e.RotateIn).HasColumnName("Rotate_In");
            entity.Property(e => e.RotateOut).HasColumnName("Rotate_Out");
            entity.Property(e => e.RunWaste).HasColumnName("Run_waste");
            entity.Property(e => e.SapStatus).HasColumnName("SAP_Status");
            entity.Property(e => e.SemiBlk).HasColumnName("Semi_Blk");
            entity.Property(e => e.SeparatMatNo)
                .HasMaxLength(72)
                .HasColumnName("Separat_Mat_no");
            entity.Property(e => e.SeqNo).HasColumnName("Seq_No");
            entity.Property(e => e.SetupTm).HasColumnName("Setup_tm");
            entity.Property(e => e.SetupWaste).HasColumnName("Setup_waste");
            entity.Property(e => e.Shade1).HasMaxLength(40);
            entity.Property(e => e.Shade2).HasMaxLength(40);
            entity.Property(e => e.Shade3).HasMaxLength(40);
            entity.Property(e => e.Shade4).HasMaxLength(40);
            entity.Property(e => e.Shade5).HasMaxLength(40);
            entity.Property(e => e.Shade6).HasMaxLength(40);
            entity.Property(e => e.Shade7).HasMaxLength(40);
            entity.Property(e => e.SheetInLeg).HasColumnName("Sheet_in_Leg");
            entity.Property(e => e.SheetInWid).HasColumnName("Sheet_in_Wid");
            entity.Property(e => e.SheetOutLeg).HasColumnName("Sheet_out_Leg");
            entity.Property(e => e.SheetOutWid).HasColumnName("Sheet_out_Wid");
            entity.Property(e => e.ShipBlk).HasColumnName("Ship_Blk");
            entity.Property(e => e.StackHeight).HasColumnName("Stack_Height");
            entity.Property(e => e.StanBlk).HasColumnName("Stan_Blk");
            entity.Property(e => e.StdProcess).HasColumnName("Std_Process");
            entity.Property(e => e.TranStatus).HasColumnName("Tran_Status");
            entity.Property(e => e.UnUpgradBoard)
                .HasDefaultValue(false)
                .HasColumnName("UnUpgrad_Board");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.WasteLeg).HasColumnName("Waste_Leg");
            entity.Property(e => e.WasteWid).HasColumnName("Waste_Wid");
            entity.Property(e => e.WeightIn).HasColumnName("Weight_in");
            entity.Property(e => e.WeightOut).HasColumnName("Weight_out");
        });

        modelBuilder.Entity<ScoreGap>(entity =>
        {
            entity.ToTable("Score_Gap");

            entity.Property(e => e.ControllerCode).HasMaxLength(10);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Flute)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.PlanProgramCode).HasMaxLength(10);
            entity.Property(e => e.ScoreGap1).HasColumnName("Score_Gap");
            entity.Property(e => e.ScoreType)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("Score_Type");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<ScoreType>(entity =>
        {
            entity.ToTable("Score_Type");

            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.ScoreTypeId)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("ScoreType_ID");
            entity.Property(e => e.ScoreTypeName)
                .HasMaxLength(50)
                .HasColumnName("ScoreType_Name");
            entity.Property(e => e.ScoreTypeWording)
                .HasMaxLength(100)
                .HasColumnName("ScoreType_Wording");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<SendEmail>(entity =>
        {
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<SetCategoriesOldMat>(entity =>
        {
            entity.HasKey(e => e.IdProductType);

            entity.Property(e => e.IdProductType).ValueGeneratedNever();
            entity.Property(e => e.KopName)
                .HasMaxLength(50)
                .HasColumnName("kopName");
            entity.Property(e => e.KpgName)
                .HasMaxLength(50)
                .HasColumnName("kpgName");
            entity.Property(e => e.Lv2)
                .HasMaxLength(2)
                .HasColumnName("LV2");
            entity.Property(e => e.PccName)
                .HasMaxLength(50)
                .HasColumnName("pccName");
            entity.Property(e => e.PdtName)
                .HasMaxLength(100)
                .HasColumnName("pdtName");
        });

        modelBuilder.Entity<StandardPatternName>(entity =>
        {
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.PatternName).HasMaxLength(50);
            entity.Property(e => e.PictureNamePallet)
                .HasMaxLength(50)
                .HasComment("ชื่อรูปจาก PM2 เช่น Type01.jpg,Type2.jpg");
            entity.Property(e => e.Picturepath).HasMaxLength(100);
            entity.Property(e => e.Status).HasDefaultValue(true);
            entity.Property(e => e.Type).HasMaxLength(50);
            entity.Property(e => e.UpdateBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<SubMenus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tbl_SubMenus");

            entity.Property(e => e.Action)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Controller)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.MainMenuId).HasColumnName("MainMenuID");
            entity.Property(e => e.SubMenuName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<TagPrintSo>(entity =>
        {
            entity.ToTable("TagPrintSO");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.DataText).HasMaxLength(200);
            entity.Property(e => e.Description).HasMaxLength(500);
            entity.Property(e => e.Status).HasDefaultValue(true);
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<TransactionsDetail>(entity =>
        {
            entity.ToTable("Transactions_Detail");

            entity.HasIndex(e => e.MaterialNo, "NonClusteredIndex-MatNo-TransactionDetail");

            entity.Property(e => e.CapImg).HasDefaultValue(false);
            entity.Property(e => e.Cgtype)
                .HasMaxLength(1)
                .HasColumnName("CGType");
            entity.Property(e => e.CoatingType).HasMaxLength(20);
            entity.Property(e => e.CoatingTypeDesc).HasMaxLength(100);
            entity.Property(e => e.ExampleColor).HasMaxLength(100);
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.Gltail).HasColumnName("GLTail");
            entity.Property(e => e.Glwid).HasColumnName("GLwid");
            entity.Property(e => e.HierarchyLv4).HasMaxLength(3);
            entity.Property(e => e.HoneyCoreSize).HasMaxLength(15);
            entity.Property(e => e.HvaGroup1).HasMaxLength(4);
            entity.Property(e => e.HvaGroup2).HasMaxLength(4);
            entity.Property(e => e.HvaGroup3).HasMaxLength(4);
            entity.Property(e => e.HvaGroup4).HasMaxLength(4);
            entity.Property(e => e.HvaGroup5).HasMaxLength(4);
            entity.Property(e => e.HvaGroup6).HasMaxLength(4);
            entity.Property(e => e.HvaGroup7).HasMaxLength(4);
            entity.Property(e => e.IsWrap).HasMaxLength(10);
            entity.Property(e => e.MatSaleOrg).HasMaxLength(10);
            entity.Property(e => e.MaterialNo)
                .IsRequired()
                .HasMaxLength(18);
            entity.Property(e => e.NewBlockDieCut).HasMaxLength(100);
            entity.Property(e => e.NewPrintPlate).HasMaxLength(100);
            entity.Property(e => e.NotchSide).HasMaxLength(5);
            entity.Property(e => e.OldBlockDieCut).HasMaxLength(100);
            entity.Property(e => e.OldPrintPlate).HasMaxLength(100);
            entity.Property(e => e.PdisStatus)
                .HasMaxLength(1)
                .HasColumnName("PDIS_Status");
            entity.Property(e => e.SideA).HasColumnName("Side_A");
            entity.Property(e => e.SideB).HasColumnName("Side_B");
            entity.Property(e => e.SideC).HasColumnName("Side_C");
            entity.Property(e => e.SideD).HasColumnName("Side_D");
        });

        modelBuilder.Entity<TruckOptimize>(entity =>
        {
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode).HasMaxLength(10);
            entity.Property(e => e.FgbundleH).HasColumnName("FGBundle_H");
            entity.Property(e => e.FgbundleL).HasColumnName("FGBundle_L");
            entity.Property(e => e.FgbundleW).HasColumnName("FGBundle_W");
            entity.Property(e => e.FgpalletH).HasColumnName("FGPallet_H");
            entity.Property(e => e.FgpalletL).HasColumnName("FGPallet_L");
            entity.Property(e => e.FgpalletW).HasColumnName("FGPallet_W");
            entity.Property(e => e.MaterialNo).HasMaxLength(18);
            entity.Property(e => e.PalletSizeH).HasColumnName("PalletSize_H");
            entity.Property(e => e.PalletSizeL).HasColumnName("PalletSize_L");
            entity.Property(e => e.PalletSizeW).HasColumnName("PalletSize_W");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<UnitMaterial>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tbl_ProductUnit");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<UpdateDuedateAndOrderQtyByDwtoMoData>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_TempUpdateDuedateAndOrderQtyByDWToMoData");

            entity.ToTable("UpdateDuedateAndOrderQtyByDWToMoData");

            entity.Property(e => e.DueDate)
                .HasColumnType("datetime")
                .HasColumnName("due_date");
            entity.Property(e => e.ItemNo)
                .HasMaxLength(50)
                .HasColumnName("item_no");
            entity.Property(e => e.SalesDocumentNo)
                .HasMaxLength(50)
                .HasColumnName("sales_document_no");
            entity.Property(e => e.SalesDocumentNoItemNo)
                .HasMaxLength(50)
                .HasColumnName("sales_document_no_item_no");
            entity.Property(e => e.SalesQty).HasColumnName("sales_qty");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}